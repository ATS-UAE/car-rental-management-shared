{"version":3,"sources":["components/presentational/display/ModalSwitch.tsx","components/presentational/display/DialogModal.tsx","../../node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","components/presentational/display/TransferList.tsx","components/containers/forms/clients/LocationTransferListForm.tsx","components/containers/forms/clients/UserTransferListForm.tsx","components/containers/forms/clients/VehicleTransferListForm.tsx","components/containers/display/ClientTableView.tsx","components/pages/Clients.tsx"],"names":["ModalSwitch","previousLocation","props","location","nextProps","this","history","action","state","modal","routes","isModal","map","path","component","render","key","Component","DialogModal","content","Content","dialogProps","title","actions","open","onClose","DialogContentText","id","Dialog","DialogTitle","DialogContent","DialogActions","color","onClick","buttonProps","text","Button","CardHeader","React","forwardRef","ref","avatar","classes","className","_props$component","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","titleTypographyProps","other","_objectWithoutProperties","type","Typography","createElement","_extends","variant","display","clsx","root","withStyles","alignItems","padding","flex","marginRight","alignSelf","marginTop","name","C","wrapperFunc","styles","TransferList","leftChecked","rightChecked","componentDidUpdate","prevProps","items","setState","left","not","right","a","b","filter","valueA","findIndex","valueB","comparator","intersection","union","handleToggle","value","checked","currentIndex","newChecked","push","splice","numberOfChecked","length","handleToggleAll","handleCheckedRight","onChange","concat","handleCheckedLeft","customList","Card","cardHeader","Checkbox","indeterminate","disabled","inputProps","Divider","List","list","dense","role","item","listMapper","ListItem","button","ListItemIcon","tabIndex","disableRipple","String","ListItemText","primary","primaryLabel","secondary","secondaryLabel","onSubmit","Grid","container","spacing","justify","direction","size","aria-label","loading","e","theme","createStyles","margin","width","height","backgroundColor","palette","background","paper","overflow","connect","locations","reduxActions","clientId","fetchLocations","useState","setItems","setRight","setLoading","clientData","setClientData","useEffect","async","api","fetchClient","getClientData","data","find","clients","client","updateClient","then","address","users","user","Role","MASTER","console","log","firstName","lastName","username","toTitleWords","vehicles","vehicle","plateNumber","brand","model","tableIcons","Add","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","ClientTableView","componentDidMount","reduceCategoryData","clientColumns","field","editable","clientSelected","fetchClients","categoryColumns","categoryData","renderModal","replace","fetchUsers","to","fetchVehicles","onRowUpdate","Promise","resolve","onRowAdd","createClient","isLoading","columns","icons","icon","Refresh","tooltip","isFreeAction","event","all","DirectionsCar","LocationCity","People","compose","withRouter"],"mappings":"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","file":"static/js/15.6c2600ec.chunk.js","sourcesContent":["import React, { Component, ReactNode, ComponentType } from \"react\";\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tRoute as ReactRouterRoute,\r\n\tLink,\r\n\tRouteComponentProps\r\n} from \"react-router-dom\";\r\nimport { Location, History } from \"history\";\r\n// This example shows how to render two different screens\r\n// (or the same screen in a different context) at the same url,\r\n// depending on how you got there.\r\n//\r\n// Click the colors and see them full screen, then \"visit the\r\n// gallery\" and click on the colors. Note the URL and the component\r\n// are the same as before but now we see them inside a modal\r\n// on top of the old screen.\r\n\r\ninterface Route {\r\n\tpath: string;\r\n\tcomponent?: ComponentType;\r\n\trender?: (props: RouteComponentProps) => ReactNode;\r\n}\r\n\r\ninterface Props {\r\n\tlocation: Location;\r\n\thistory: History;\r\n\troutes: Route[];\r\n}\r\n\r\nexport class ModalSwitch extends Component<Props> {\r\n\t// We can pass a location to <Switch/> that will tell it to\r\n\t// ignore the router's current location and use the location\r\n\t// prop instead.\r\n\t//\r\n\t// We can also use \"location state\" to tell the app the user\r\n\t// wants to go to `/img/2` in a modal, rather than as the\r\n\t// main page, keeping the gallery visible behind it.\r\n\t//\r\n\t// Normally, `/img/2` wouldn't match the gallery at `/`.\r\n\t// So, to get both screens to render, we can save the old\r\n\t// location and pass it to Switch, so it will think the location\r\n\t// is still `/` even though its `/img/2`.\r\n\tpreviousLocation = this.props.location;\r\n\r\n\tcomponentWillUpdate(nextProps) {\r\n\t\tlet { location } = this.props;\r\n\r\n\t\t// set previousLocation if props.location is not modal\r\n\t\tif (\r\n\t\t\tnextProps.history.action !== \"POP\" &&\r\n\t\t\t(!location.state || !location.state.modal)\r\n\t\t) {\r\n\t\t\tthis.previousLocation = this.props.location;\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet { location, routes } = this.props;\r\n\r\n\t\tlet isModal = !!(\r\n\t\t\tlocation.state &&\r\n\t\t\tlocation.state.modal &&\r\n\t\t\tthis.previousLocation !== location\r\n\t\t); // not initial render\r\n\r\n\t\treturn routes.map(({ path, component, render }) =>\r\n\t\t\tisModal ? (\r\n\t\t\t\t<ReactRouterRoute\r\n\t\t\t\t\tkey={path}\r\n\t\t\t\t\tpath={path}\r\n\t\t\t\t\tcomponent={component}\r\n\t\t\t\t\trender={render}\r\n\t\t\t\t/>\r\n\t\t\t) : null\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst IMAGES = [\r\n\t{ id: 0, title: \"Dark Orchid\", color: \"DarkOrchid\" },\r\n\t{ id: 1, title: \"Lime Green\", color: \"LimeGreen\" },\r\n\t{ id: 2, title: \"Tomato\", color: \"Tomato\" },\r\n\t{ id: 3, title: \"Seven Ate Nine\", color: \"#789\" },\r\n\t{ id: 4, title: \"Crimson\", color: \"Crimson\" }\r\n];\r\n\r\nfunction Thumbnail({ color }) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\twidth: 50,\r\n\t\t\t\theight: 50,\r\n\t\t\t\tbackground: color\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction Image({ color }) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\twidth: \"100%\",\r\n\t\t\t\theight: 400,\r\n\t\t\t\tbackground: color\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction Home() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Link to=\"/gallery\">Visit the Gallery</Link>\r\n\t\t\t<h2>Featured Images</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to=\"/img/2\">Tomato</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to=\"/img/4\">Crimson</Link>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction Gallery() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{IMAGES.map(i => (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tkey={i.id}\r\n\t\t\t\t\tto={{\r\n\t\t\t\t\t\tpathname: `/img/${i.id}`,\r\n\t\t\t\t\t\t// this is the trick!\r\n\t\t\t\t\t\tstate: { modal: true }\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Thumbnail color={i.color} />\r\n\t\t\t\t\t<p>{i.title}</p>\r\n\t\t\t\t</Link>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction ImageView({ match }) {\r\n\tlet image = IMAGES[parseInt(match.params.id, 10)];\r\n\r\n\tif (!image) return <div>Image not found</div>;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>{image.title}</h1>\r\n\t\t\t<Image color={image.color} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction Modal({ match, history }) {\r\n\tlet image = IMAGES[parseInt(match.params.id, 10)];\r\n\r\n\tif (!image) return null;\r\n\r\n\tlet back = e => {\r\n\t\te.stopPropagation();\r\n\t\thistory.goBack();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tonClick={back}\r\n\t\t\tstyle={{\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\ttop: 0,\r\n\t\t\t\tleft: 0,\r\n\t\t\t\tbottom: 0,\r\n\t\t\t\tright: 0,\r\n\t\t\t\tbackground: \"rgba(0, 0, 0, 0.15)\"\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"modal\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\tbackground: \"#fff\",\r\n\t\t\t\t\ttop: 25,\r\n\t\t\t\t\tleft: \"10%\",\r\n\t\t\t\t\tright: \"10%\",\r\n\t\t\t\t\tpadding: 15,\r\n\t\t\t\t\tborder: \"2px solid #444\"\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<h1>{image.title}</h1>\r\n\t\t\t\t<Image color={image.color} />\r\n\t\t\t\t<button type=\"button\" onClick={back}>\r\n\t\t\t\t\tClose\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction ModalGallery() {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<ReactRouterRoute component={ModalSwitch} />\r\n\t\t</Router>\r\n\t);\r\n}\r\n","import React, { FC, ReactNode, MouseEventHandler } from \"react\";\r\nimport {\r\n\tButton,\r\n\tDialog,\r\n\tDialogActions,\r\n\tDialogContent,\r\n\tDialogContentText,\r\n\tDialogTitle,\r\n\tPropTypes\r\n} from \"@material-ui/core\";\r\n\r\nimport { DialogProps } from \"@material-ui/core/Dialog\";\r\nimport { ButtonProps } from \"@material-ui/core/Button\";\r\n\r\ninterface Action {\r\n\ttext: string;\r\n\tbuttonProps?: ButtonProps;\r\n\tcolor?: PropTypes.Color;\r\n\tonClick: MouseEventHandler;\r\n}\r\n\r\nexport interface DialogModalProps {\r\n\topen: boolean;\r\n\tonClose: () => void;\r\n\tdialogProps?: DialogProps;\r\n\tcontent: string | ReactNode;\r\n\ttitle: string | ReactNode;\r\n\tactions?: Action[];\r\n}\r\n\r\nexport const DialogModal: FC<DialogModalProps> = ({\r\n\tcontent: Content,\r\n\tdialogProps,\r\n\ttitle,\r\n\tactions,\r\n\topen,\r\n\tonClose\r\n}) => {\r\n\tlet content: string | ReactNode;\r\n\tif (typeof Content === \"string\") {\r\n\t\tcontent = (\r\n\t\t\t<DialogContentText id=\"alert-dialog-description\">\r\n\t\t\t\t{Content}\r\n\t\t\t</DialogContentText>\r\n\t\t);\r\n\t} else {\r\n\t\tcontent = Content;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Dialog open={open} onClose={onClose} {...dialogProps}>\r\n\t\t\t<DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n\t\t\t<DialogContent>{content}</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t{actions &&\r\n\t\t\t\t\tactions.map(({ color, onClick, buttonProps, text }) => (\r\n\t\t\t\t\t\t<Button onClick={onClick} color={color} {...buttonProps}>\r\n\t\t\t\t\t\t\t{text}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t))}\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import React, { Component } from \"react\";\r\nimport {\r\n\tGrid,\r\n\tList,\r\n\tCard,\r\n\tCardHeader,\r\n\tListItem,\r\n\tListItemText,\r\n\tListItemIcon,\r\n\tCheckbox,\r\n\tButton,\r\n\tDivider,\r\n\tTheme,\r\n\twithStyles,\r\n\tcreateStyles,\r\n\tWithStyles\r\n} from \"@material-ui/core\";\r\n\r\nexport interface TransferListProps<T = any> {\r\n\titems: T[];\r\n\tcomparator: (a: T, b: T) => boolean;\r\n\tright: T[];\r\n\tlistMapper: (\r\n\t\titem: T\r\n\t) => {\r\n\t\tid: string | number;\r\n\t\tprimaryLabel: string;\r\n\t\tsecondaryLabel?: string;\r\n\t};\r\n\tonSubmit: (\r\n\t\tevent: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n\t\tdata: T[]\r\n\t) => void;\r\n\tonChange: (right: T[]) => void;\r\n\tloading?: boolean;\r\n}\r\n\r\ninterface TransferListState<T> {\r\n\tchecked: T[];\r\n\tleft: T[];\r\n}\r\n\r\ninterface HasId {\r\n\tid: number;\r\n}\r\n\r\nexport default class<T extends HasId> extends Component<TransferListProps<T>> {\r\n\tprivate readonly C = this.wrapperFunc();\r\n\r\n\trender() {\r\n\t\treturn <this.C {...this.props} />;\r\n\t}\r\n\r\n\tprivate wrapperFunc() {\r\n\t\ttype t = new () => TransferList<T>;\r\n\t\treturn withStyles(styles)(TransferList as t);\r\n\t}\r\n}\r\n\r\nclass TransferList<T extends HasId> extends Component<\r\n\tTransferListProps<T> & WithStyles<typeof styles>,\r\n\tTransferListState<T>\r\n> {\r\n\tleftChecked: T[] = [];\r\n\trightChecked: T[] = [];\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tconst { items, right } = props;\r\n\t\tthis.state = {\r\n\t\t\tchecked: [],\r\n\t\t\tleft: this.not(items, right)\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidUpdate = prevProps => {\r\n\t\tif (this.props.items !== prevProps.items) {\r\n\t\t\tthis.setState({ left: this.not(this.props.items, this.props.right) });\r\n\t\t}\r\n\t};\r\n\r\n\tnot = (a: T[], b: T[]) =>\r\n\t\ta.filter(\r\n\t\t\tvalueA =>\r\n\t\t\t\tb.findIndex(valueB => this.props.comparator(valueA, valueB)) === -1\r\n\t\t);\r\n\r\n\tintersection = (a: T[], b: T[]) =>\r\n\t\ta.filter(\r\n\t\t\tvalueA =>\r\n\t\t\t\tb.findIndex(valueB => this.props.comparator(valueA, valueB)) !== -1\r\n\t\t);\r\n\r\n\tunion = (a: T[], b: T[]) => [...a, ...this.not(b, a)];\r\n\r\n\thandleToggle = (value: T) => () => {\r\n\t\tconst { checked } = this.state;\r\n\t\tconst currentIndex = checked.findIndex(checked =>\r\n\t\t\tthis.props.comparator(checked, value)\r\n\t\t);\r\n\t\tconst newChecked = [...checked];\r\n\r\n\t\tif (currentIndex === -1) {\r\n\t\t\tnewChecked.push(value);\r\n\t\t} else {\r\n\t\t\tnewChecked.splice(currentIndex, 1);\r\n\t\t}\r\n\r\n\t\tthis.setState({ checked: newChecked });\r\n\t};\r\n\r\n\tnumberOfChecked = (items: T[]) =>\r\n\t\tthis.intersection(this.state.checked, items).length;\r\n\r\n\thandleToggleAll = (items: T[]) => () => {\r\n\t\tconst { checked } = this.state;\r\n\r\n\t\tif (this.numberOfChecked(items) === items.length) {\r\n\t\t\tthis.setState({ checked: this.not(checked, items) });\r\n\t\t} else {\r\n\t\t\tthis.setState({ checked: this.union(checked, items) });\r\n\t\t}\r\n\t};\r\n\r\n\thandleCheckedRight = () => {\r\n\t\tconst { left, checked } = this.state;\r\n\t\tconst { right, onChange } = this.props;\r\n\r\n\t\tthis.setState({ left: this.not(left, this.leftChecked) });\r\n\t\tonChange(right.concat(this.leftChecked));\r\n\t\tthis.setState({ checked: this.not(checked, this.leftChecked) });\r\n\t};\r\n\r\n\thandleCheckedLeft = () => {\r\n\t\tconst { left, checked } = this.state;\r\n\t\tconst { right, onChange } = this.props;\r\n\r\n\t\tonChange(this.not(right, this.rightChecked));\r\n\t\tthis.setState({ left: left.concat(this.rightChecked) });\r\n\t\tthis.setState({ checked: this.not(checked, this.rightChecked) });\r\n\t};\r\n\r\n\tcustomList = (title: React.ReactNode, items: T[]) => (\r\n\t\t<Card>\r\n\t\t\t<CardHeader\r\n\t\t\t\tclassName={this.props.classes.cardHeader}\r\n\t\t\t\tavatar={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\tonClick={this.handleToggleAll(items)}\r\n\t\t\t\t\t\tchecked={\r\n\t\t\t\t\t\t\tthis.numberOfChecked(items) === items.length && items.length !== 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tindeterminate={\r\n\t\t\t\t\t\t\tthis.numberOfChecked(items) !== items.length &&\r\n\t\t\t\t\t\t\tthis.numberOfChecked(items) !== 0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdisabled={items.length === 0}\r\n\t\t\t\t\t\tinputProps={{ \"aria-label\": \"all items selected\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\ttitle={title}\r\n\t\t\t\tsubheader={`${this.numberOfChecked(items)}/${items.length} selected`}\r\n\t\t\t/>\r\n\t\t\t<Divider />\r\n\t\t\t<List\r\n\t\t\t\tclassName={this.props.classes.list}\r\n\t\t\t\tdense\r\n\t\t\t\tcomponent=\"div\"\r\n\t\t\t\trole=\"list\"\r\n\t\t\t>\r\n\t\t\t\t{items.map(value => {\r\n\t\t\t\t\tconst item = this.props.listMapper(value);\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\t\t\trole=\"listitem\"\r\n\t\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\t\tonClick={this.handleToggle(value)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\tchecked={\r\n\t\t\t\t\t\t\t\t\t\tthis.state.checked.findIndex(checked =>\r\n\t\t\t\t\t\t\t\t\t\t\tthis.props.comparator(value, checked)\r\n\t\t\t\t\t\t\t\t\t\t) !== -1\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttabIndex={-1}\r\n\t\t\t\t\t\t\t\t\tdisableRipple\r\n\t\t\t\t\t\t\t\t\tinputProps={{ \"aria-labelledby\": String(item.id) }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tid={String(item.id)}\r\n\t\t\t\t\t\t\t\tprimary={item.primaryLabel}\r\n\t\t\t\t\t\t\t\tsecondary={item.secondaryLabel}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t\t<ListItem />\r\n\t\t\t</List>\r\n\t\t</Card>\r\n\t);\r\n\trender() {\r\n\t\tconst { checked, left } = this.state;\r\n\t\tconst { classes, onSubmit, right } = this.props;\r\n\t\tthis.leftChecked = this.intersection(checked, left);\r\n\t\tthis.rightChecked = this.intersection(checked, right);\r\n\r\n\t\treturn (\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tspacing={2}\r\n\t\t\t\tjustify=\"center\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t\tclassName={classes.root}\r\n\t\t\t>\r\n\t\t\t\t<Grid item>{this.customList(\"Choices\", left)}</Grid>\r\n\t\t\t\t<Grid item>\r\n\t\t\t\t\t<Grid container direction=\"column\" alignItems=\"center\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\t\tonClick={this.handleCheckedRight}\r\n\t\t\t\t\t\t\tdisabled={this.leftChecked.length === 0}\r\n\t\t\t\t\t\t\taria-label=\"move selected right\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t&gt;\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\t\tonClick={this.handleCheckedLeft}\r\n\t\t\t\t\t\t\tdisabled={this.rightChecked.length === 0}\r\n\t\t\t\t\t\t\taria-label=\"move selected left\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t&lt;\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item>{this.customList(\"Chosen\", right)}</Grid>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\tdisabled={this.props.loading}\r\n\t\t\t\t\tonClick={e => onSubmit(e, right)}\r\n\t\t\t\t>\r\n\t\t\t\t\tDone\r\n\t\t\t\t</Button>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst styles = (theme: Theme) =>\r\n\tcreateStyles({\r\n\t\troot: {\r\n\t\t\tmargin: \"auto\"\r\n\t\t},\r\n\t\tcardHeader: {\r\n\t\t\tpadding: theme.spacing(1, 2)\r\n\t\t},\r\n\t\tlist: {\r\n\t\t\twidth: 200,\r\n\t\t\theight: 230,\r\n\t\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\t\toverflow: \"auto\"\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\tmargin: theme.spacing(0.5, 0)\r\n\t\t}\r\n\t});\r\n","import React, { useEffect, FC, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as reduxActions from \"../../../../actions\";\r\nimport api from \"../../../../utils/helpers/api\";\r\nimport { ReduxState } from \"../../../../typings/redux\";\r\nimport {\r\n\tLocationResponse,\r\n\tClientResponse,\r\n\tWithServerResponse\r\n} from \"../../../../typings/api\";\r\nimport TransferList, {\r\n\tTransferListProps\r\n} from \"../../../presentational/display/TransferList\";\r\nimport { Loading } from \"../../../presentational\";\r\ninterface LocationTransferListFormProps {\r\n\tclientId: number;\r\n\tonSubmit?: () => void;\r\n}\r\n\r\ninterface LocationTransferListFormStateProps {\r\n\tlocations: ReduxState[\"locations\"];\r\n}\r\n\r\ntype Props = LocationTransferListFormProps &\r\n\ttypeof reduxActions &\r\n\tLocationTransferListFormStateProps;\r\n\r\nconst LocationTransferListForm: FC<Props> = ({\r\n\tlocations,\r\n\tclientId,\r\n\tfetchLocations,\r\n\tonSubmit\r\n}) => {\r\n\tconst [items, setItems] = useState<LocationResponse[]>([]);\r\n\tconst [right, setRight] = useState<LocationResponse[]>([]);\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\tconst [clientData, setClientData] = useState<WithServerResponse<\r\n\t\tClientResponse\r\n\t> | null>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getClientData = async () => {\r\n\t\t\tconst clientData = await api.fetchClient(clientId);\r\n\t\t\tsetClientData(clientData);\r\n\t\t};\r\n\t\tgetClientData();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (locations && locations.data) {\r\n\t\t\tconst left: LocationResponse[] = [];\r\n\t\t\tconst right: LocationResponse[] = [];\r\n\r\n\t\t\tfor (const location of locations.data) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tlocations.data &&\r\n\t\t\t\t\tlocations.data.find(location =>\r\n\t\t\t\t\t\tlocation.clients.find(client => client.id === clientId)\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tright.push(location);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tleft.push(location);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetItems([...left, ...right]);\r\n\t\t\tsetRight(right);\r\n\t\t}\r\n\t}, [locations, clientData]);\r\n\r\n\treturn (\r\n\t\t(clientData && (\r\n\t\t\t<TransferList<LocationResponse>\r\n\t\t\t\tonSubmit={(e, data) => {\r\n\t\t\t\t\tsetLoading(true);\r\n\t\t\t\t\tapi\r\n\t\t\t\t\t\t.updateClient({\r\n\t\t\t\t\t\t\tid: clientId,\r\n\t\t\t\t\t\t\tlocations: data.map(value => value.id)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.then(fetchLocations)\r\n\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t\t\tonSubmit && onSubmit();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\titems={items}\r\n\t\t\t\tright={right}\r\n\t\t\t\tonChange={right => setRight(right)}\r\n\t\t\t\tcomparator={(a, b) => a.id === b.id && a.clientId === b.clientId}\r\n\t\t\t\tlistMapper={item => ({\r\n\t\t\t\t\tid: item.id,\r\n\t\t\t\t\tprimaryLabel: item.name,\r\n\t\t\t\t\tsecondaryLabel: item.address\r\n\t\t\t\t})}\r\n\t\t\t/>\r\n\t\t)) || <Loading />\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({\r\n\tlocations\r\n}: ReduxState): LocationTransferListFormStateProps => ({\r\n\tlocations\r\n});\r\n\r\nexport default connect<\r\n\tLocationTransferListFormStateProps,\r\n\ttypeof reduxActions,\r\n\tLocationTransferListFormProps,\r\n\tReduxState\r\n>(\r\n\tmapStateToProps,\r\n\t() => reduxActions\r\n)(LocationTransferListForm);\r\n","import React, { useEffect, FC, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport api from \"../../../../utils/helpers/api\";\r\nimport { ReduxState } from \"../../../../typings/redux\";\r\nimport { UserResponse } from \"../../../../typings/api\";\r\nimport TransferList, {\r\n\tTransferListProps\r\n} from \"../../../presentational/display/TransferList\";\r\nimport { Role } from \"../../../../variables/enums\";\r\nimport { toTitleWords } from \"../../../../utils/helpers\";\r\n\r\ninterface UserTransferListFormProps {\r\n\tclientId: number;\r\n\tonSubmit?: () => void;\r\n}\r\n\r\ninterface Props extends UserTransferListFormProps {\r\n\tusers: ReduxState[\"users\"];\r\n}\r\n\r\nconst UserTransferListForm: FC<Props> = ({ users, clientId, onSubmit }) => {\r\n\tconst [items, setItems] = useState<UserResponse[]>([]);\r\n\tconst [right, setRight] = useState<UserResponse[]>([]);\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (users && users.data) {\r\n\t\t\tconst left: UserResponse[] = [];\r\n\t\t\tconst right: UserResponse[] = [];\r\n\r\n\t\t\tfor (const user of users.data) {\r\n\t\t\t\tif (clientId === user.clientId) {\r\n\t\t\t\t\tright.push(user);\r\n\t\t\t\t} else if (user.clientId === null && user.role !== Role.MASTER) {\r\n\t\t\t\t\tleft.push(user);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconsole.log(left, right);\r\n\t\t\tsetItems([...left, ...right]);\r\n\t\t\tsetRight(right);\r\n\t\t}\r\n\t}, [users]);\r\n\r\n\treturn (\r\n\t\t<TransferList<UserResponse>\r\n\t\t\tonSubmit={(e, data) => {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tapi\r\n\t\t\t\t\t.updateClient({\r\n\t\t\t\t\t\tid: clientId,\r\n\t\t\t\t\t\tusers: data.map(value => value.id)\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t\tonSubmit && onSubmit();\r\n\t\t\t\t\t});\r\n\t\t\t}}\r\n\t\t\tloading={loading}\r\n\t\t\titems={items}\r\n\t\t\tright={right}\r\n\t\t\tonChange={right => setRight(right)}\r\n\t\t\tcomparator={(a, b) => a.id === b.id && a.clientId === b.clientId}\r\n\t\t\tlistMapper={item => ({\r\n\t\t\t\tid: item.id,\r\n\t\t\t\tprimaryLabel: `${item.firstName} ${item.lastName}`,\r\n\t\t\t\tsecondaryLabel: `${item.username} ${toTitleWords(item.role)}`\r\n\t\t\t})}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ users }: ReduxState) => ({\r\n\tusers\r\n});\r\n\r\nexport default connect(mapStateToProps)(UserTransferListForm);\r\n","import React, { useEffect, FC, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport api from \"../../../../utils/helpers/api\";\r\nimport { ReduxState } from \"../../../../typings/redux\";\r\nimport { VehicleResponse } from \"../../../../typings/api\";\r\nimport TransferList, {\r\n\tTransferListProps\r\n} from \"../../../presentational/display/TransferList\";\r\n\r\ninterface VehicleTransformListFormProps {\r\n\tclientId: number;\r\n\tonSubmit?: () => void;\r\n}\r\n\r\ninterface Props extends VehicleTransformListFormProps {\r\n\tvehicles: ReduxState[\"vehicles\"];\r\n}\r\n\r\nconst VehicleTransferListForm: FC<Props> = ({\r\n\tvehicles,\r\n\tclientId,\r\n\tonSubmit\r\n}) => {\r\n\tconst [items, setItems] = useState<VehicleResponse[]>([]);\r\n\tconst [right, setRight] = useState<VehicleResponse[]>([]);\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (vehicles && vehicles.data) {\r\n\t\t\tconst left: VehicleResponse[] = [];\r\n\t\t\tconst right: VehicleResponse[] = [];\r\n\r\n\t\t\tfor (const vehicle of vehicles.data) {\r\n\t\t\t\tif (clientId === vehicle.clientId) {\r\n\t\t\t\t\tright.push(vehicle);\r\n\t\t\t\t} else if (vehicle.clientId === null) {\r\n\t\t\t\t\tleft.push(vehicle);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetItems([...left, ...right]);\r\n\t\t\tsetRight(right);\r\n\t\t}\r\n\t}, [vehicles]);\r\n\r\n\treturn (\r\n\t\t<TransferList<VehicleResponse>\r\n\t\t\tonSubmit={(e, data) => {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tapi\r\n\t\t\t\t\t.updateClient({\r\n\t\t\t\t\t\tid: clientId,\r\n\t\t\t\t\t\tvehicles: data.map(value => value.id)\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t\tonSubmit && onSubmit();\r\n\t\t\t\t\t});\r\n\t\t\t}}\r\n\t\t\tloading={loading}\r\n\t\t\titems={items}\r\n\t\t\tright={right}\r\n\t\t\tonChange={right => setRight(right)}\r\n\t\t\tcomparator={(a, b) => a.id === b.id && a.clientId === b.clientId}\r\n\t\t\tlistMapper={item => ({\r\n\t\t\t\tid: item.id,\r\n\t\t\t\tprimaryLabel: item.plateNumber,\r\n\t\t\t\tsecondaryLabel: `${item.brand} ${item.model}`\r\n\t\t\t})}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ vehicles }: ReduxState) => ({\r\n\tvehicles\r\n});\r\n\r\nexport default connect(mapStateToProps)(VehicleTransferListForm);\r\n","import React, { Component, forwardRef } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"recompose\";\r\nimport { Location, History } from \"history\";\r\nimport * as reduxActions from \"../../../actions\";\r\nimport api from \"../../../utils/helpers/api\";\r\nimport { ReduxState } from \"../../../typings\";\r\nimport { ClientResponse } from \"../../../typings/api\";\r\nimport { ModalSwitch } from \"../../presentational/display/ModalSwitch\";\r\nimport MaterialTable, { Column, Icons } from \"material-table\";\r\nimport {\r\n\tDialogModal,\r\n\tDialogModalProps\r\n} from \"../../presentational/display/DialogModal\";\r\nimport LocationTransferListForm from \"../forms/clients/LocationTransferListForm\";\r\nimport UserTransferListForm from \"../forms/clients/UserTransferListForm\";\r\nimport VehicleTransferListForm from \"../forms/clients/VehicleTransferListForm\";\r\nimport {\r\n\tAddBox,\r\n\tArrowUpward,\r\n\tCheck,\r\n\tChevronLeft,\r\n\tChevronRight,\r\n\tClear,\r\n\tDeleteOutline,\r\n\tEdit,\r\n\tFilterList,\r\n\tFirstPage,\r\n\tLastPage,\r\n\tRemove,\r\n\tSaveAlt,\r\n\tSearch,\r\n\tViewColumn,\r\n\tRefresh,\r\n\tLocationCity,\r\n\tDirectionsCar,\r\n\tPeople\r\n} from \"@material-ui/icons\";\r\n\r\nconst tableIcons: Icons = {\r\n\tAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n\tCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n\tClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n\tDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n\tDetailPanel: forwardRef((props, ref) => (\r\n\t\t<ChevronRight {...props} ref={ref} />\r\n\t)),\r\n\tEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n\tExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n\tFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n\tFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n\tLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n\tNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n\tPreviousPage: forwardRef((props, ref) => (\r\n\t\t<ChevronLeft {...props} ref={ref} />\r\n\t)),\r\n\tResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n\tSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n\tSortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n\tThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n\tViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\ninterface ClientTableViewProps {}\r\ninterface ClientTableViewState {\r\n\tclientColumns: Column<ClientResponse>[];\r\n\tclientData: ClientResponse[];\r\n\tclientSelected: ClientResponse | null;\r\n}\r\n\r\ntype Props = {\r\n\tlocation: Location;\r\n\thistory: History;\r\n\tclients: ReduxState[\"clients\"];\r\n} & ClientTableViewProps &\r\n\ttypeof reduxActions;\r\n\r\nclass ClientTableView extends Component<Props, ClientTableViewState> {\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tclientColumns: [\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: \"ID\",\r\n\t\t\t\t\ttype: \"numeric\",\r\n\t\t\t\t\tfield: \"id\",\r\n\t\t\t\t\teditable: \"onUpdate\"\r\n\t\t\t\t},\r\n\t\t\t\t{ title: \"Name\", field: \"name\" }\r\n\t\t\t],\r\n\t\t\tclientData: [],\r\n\t\t\tclientSelected: null\r\n\t\t};\r\n\t}\r\n\tcomponentDidMount = () => {\r\n\t\tthis.reduceCategoryData();\r\n\t};\r\n\r\n\tcomponentDidUpdate = (prevProps: Props) => {\r\n\t\tconst { clients } = this.props;\r\n\t\tif (clients !== prevProps.clients) {\r\n\t\t\tthis.reduceCategoryData();\r\n\t\t}\r\n\t};\r\n\r\n\treduceCategoryData = () => {\r\n\t\tconst { clients } = this.props;\r\n\r\n\t\tif (clients && clients.data) {\r\n\t\t\tthis.setState({ clientData: clients.data });\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { clients, fetchClients, location, history } = this.props;\r\n\t\tconst {\r\n\t\t\tclientColumns: categoryColumns,\r\n\t\t\tclientData: categoryData\r\n\t\t} = this.state;\r\n\r\n\t\tconst renderModal = (props: Omit<DialogModalProps, \"open\" | \"onClose\">) => {\r\n\t\t\treturn (\r\n\t\t\t\t<DialogModal\r\n\t\t\t\t\ttitle={props.title}\r\n\t\t\t\t\topen={true}\r\n\t\t\t\t\tonClose={() => history.replace(\"/clients\")}\r\n\t\t\t\t\tcontent={props.content}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<ModalSwitch\r\n\t\t\t\t\tlocation={location}\r\n\t\t\t\t\thistory={history}\r\n\t\t\t\t\troutes={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpath: \"/clients/users/edit\",\r\n\t\t\t\t\t\t\trender: () =>\r\n\t\t\t\t\t\t\t\trenderModal({\r\n\t\t\t\t\t\t\t\t\ttitle: \"Add users to client\",\r\n\t\t\t\t\t\t\t\t\tcontent: (this.state.clientSelected && (\r\n\t\t\t\t\t\t\t\t\t\t<UserTransferListForm\r\n\t\t\t\t\t\t\t\t\t\t\tclientId={this.state.clientSelected.id}\r\n\t\t\t\t\t\t\t\t\t\t\tonSubmit={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.fetchUsers();\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.history.replace(\"/clients\");\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)) || <Redirect to=\"/clients\" />\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpath: \"/clients/vehicles/edit\",\r\n\t\t\t\t\t\t\trender: () =>\r\n\t\t\t\t\t\t\t\trenderModal({\r\n\t\t\t\t\t\t\t\t\ttitle: \"Add vehicles to client\",\r\n\t\t\t\t\t\t\t\t\tcontent: (this.state.clientSelected && (\r\n\t\t\t\t\t\t\t\t\t\t<VehicleTransferListForm\r\n\t\t\t\t\t\t\t\t\t\t\tclientId={this.state.clientSelected.id}\r\n\t\t\t\t\t\t\t\t\t\t\tonSubmit={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.fetchVehicles();\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.history.replace(\"/clients\");\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)) || <Redirect to=\"/clients\" />\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tpath: \"/clients/locations/edit\",\r\n\t\t\t\t\t\t\trender: () =>\r\n\t\t\t\t\t\t\t\trenderModal({\r\n\t\t\t\t\t\t\t\t\ttitle: \"Add locations to client\",\r\n\t\t\t\t\t\t\t\t\tcontent: (this.state.clientSelected && (\r\n\t\t\t\t\t\t\t\t\t\t<LocationTransferListForm\r\n\t\t\t\t\t\t\t\t\t\t\tclientId={this.state.clientSelected.id}\r\n\t\t\t\t\t\t\t\t\t\t\tonSubmit={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.fetchLocations();\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.history.replace(\"/clients\");\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)) || <Redirect to=\"/clients\" />\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<MaterialTable\r\n\t\t\t\t\teditable={{\r\n\t\t\t\t\t\tonRowUpdate: ({ id, name }) =>\r\n\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\tapi\r\n\t\t\t\t\t\t\t\t\t.updateClient({ id, name })\r\n\t\t\t\t\t\t\t\t\t.then(fetchClients)\r\n\t\t\t\t\t\t\t\t\t.then(() => resolve());\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tonRowAdd: ({ name }) =>\r\n\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\tapi\r\n\t\t\t\t\t\t\t\t\t.createClient({\r\n\t\t\t\t\t\t\t\t\t\tname\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.then(fetchClients)\r\n\t\t\t\t\t\t\t\t\t.then(() => resolve());\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tisLoading={clients === null}\r\n\t\t\t\t\ttitle=\"Clients\"\r\n\t\t\t\t\tcolumns={categoryColumns}\r\n\t\t\t\t\tdata={categoryData}\r\n\t\t\t\t\ticons={tableIcons}\r\n\t\t\t\t\tactions={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ticon: () => <Refresh />,\r\n\t\t\t\t\t\t\ttooltip: \"Refresh\",\r\n\t\t\t\t\t\t\tisFreeAction: true,\r\n\t\t\t\t\t\t\tonClick: (event, data) =>\r\n\t\t\t\t\t\t\t\tPromise.all([\r\n\t\t\t\t\t\t\t\t\tthis.props.fetchClients(),\r\n\t\t\t\t\t\t\t\t\tthis.props.fetchUsers(),\r\n\t\t\t\t\t\t\t\t\tthis.props.fetchVehicles(),\r\n\t\t\t\t\t\t\t\t\tthis.props.fetchLocations()\r\n\t\t\t\t\t\t\t\t])\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ticon: () => <DirectionsCar />,\r\n\t\t\t\t\t\t\ttooltip: \"Add vehicles\",\r\n\t\t\t\t\t\t\tonClick: (event, data) => {\r\n\t\t\t\t\t\t\t\tthis.setState({ clientSelected: data as ClientResponse });\r\n\t\t\t\t\t\t\t\thistory.replace(\"/clients/vehicles/edit\", { modal: true });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ticon: () => <LocationCity />,\r\n\t\t\t\t\t\t\ttooltip: \"Add Locations\",\r\n\t\t\t\t\t\t\tonClick: (event, data) => {\r\n\t\t\t\t\t\t\t\tthis.setState({ clientSelected: data as ClientResponse });\r\n\t\t\t\t\t\t\t\thistory.replace(\"/clients/locations/edit\", { modal: true });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ticon: () => <People />,\r\n\t\t\t\t\t\t\ttooltip: \"Add Users\",\r\n\t\t\t\t\t\t\tonClick: (event, data) => {\r\n\t\t\t\t\t\t\t\tthis.setState({ clientSelected: data as ClientResponse });\r\n\t\t\t\t\t\t\t\thistory.replace(\"/clients/users/edit\", { modal: true });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ clients }: { clients: ReduxState[\"clients\"] }) => ({\r\n\tclients\r\n});\r\n\r\nexport default compose<Props & typeof reduxActions, {}>(\r\n\twithRouter,\r\n\tconnect(\r\n\t\tmapStateToProps,\r\n\t\treduxActions\r\n\t)\r\n)(ClientTableView);\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Location, History } from \"history\";\r\nimport * as actions from \"../../actions\";\r\nimport ClientTableView from \"../containers/display/ClientTableView\";\r\n\r\ninterface Props {\r\n\tlocation: Location;\r\n\thistory: History;\r\n}\r\n\r\nconst Clients: FC<Props & typeof actions> = ({\r\n\tfetchClients,\r\n\tfetchLocations,\r\n\tfetchUsers,\r\n\tfetchVehicles,\r\n\tlocation,\r\n\thistory\r\n}) => {\r\n\tuseEffect(() => {\r\n\t\tfetchClients();\r\n\t\tfetchLocations();\r\n\t\tfetchUsers();\r\n\t\tfetchVehicles();\r\n\t}, []);\r\n\treturn <ClientTableView />;\r\n};\r\n\r\nexport default connect<{}, {}, Props>(\r\n\tnull,\r\n\tactions\r\n)(Clients);\r\n"],"sourceRoot":""}