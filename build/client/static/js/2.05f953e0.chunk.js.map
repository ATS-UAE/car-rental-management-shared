{
	"version": 3,
	"sources": [
		"components/containers/layout/Role.tsx",
		"components/containers/ReportArea.tsx",
		"components/containers/AccidentDashBoard.tsx",
		"components/containers/BookingDashBoard.tsx",
		"components/containers/UserDashBoard.tsx",
		"components/containers/VehicleDashBoard.tsx",
		"../../node_modules/@babel/runtime/helpers/esm/construct.js",
		"../../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js",
		"../../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js",
		"api/Booking.ts",
		"api/Location.ts",
		"api/Vehicle.ts",
		"api/index.ts",
		"components/containers/BookingTable.tsx",
		"components/containers/BookingCreateFormStepper.tsx",
		"components/containers/ModalConfirmDeleteBooking.tsx",
		"components/containers/ModalFormBookingUpdate.tsx",
		"components/containers/ModalFormFinalizeBooking.tsx",
		"components/containers/ModalConfirmPayBooking.tsx",
		"components/containers/index.ts",
		"utils/reports/UnitSummary.ts",
		"utils/reports/index.ts"
	],
	"names": [
		"Role",
		"connect",
		"auth",
		"role",
		"data",
		"undefined",
		"roles",
		"children",
		"excludes",
		"includes",
		"reportList",
		"label",
		"value",
		"getGenerator",
		"UnitSummary",
		"Error",
		"ReportArea",
		"useState",
		"selectedReport",
		"setSelectedReport",
		"columns",
		"setColumns",
		"setData",
		"loading",
		"setLoading",
		"tableTitle",
		"setTableTitle",
		"title",
		"onSelect",
		"onClick",
		"a",
		"async",
		"report",
		"generate",
		"getColumnData",
		"console",
		"error",
		"AccidentDashBoard",
		"accidents",
		"lastYear",
		"moment",
		"subtract",
		"startOf",
		"currentTime",
		"bars",
		"i",
		"clone",
		"add",
		"monthName",
		"format",
		"monthData",
		"name",
		"count",
		"accident",
		"createdAt",
		"isBetween",
		"endOf",
		"push",
		"xAxis",
		"BookingDashBoard",
		"bookings",
		"booking",
		"from",
		"bookingStatus",
		"toTitleWords",
		"getBookingStatus",
		"UserDashBoard",
		"users",
		"MASTER",
		"unshift",
		"reduce",
		"acc",
		"user",
		"ADMIN",
		"KEY_MANAGER",
		"GUEST",
		"Master",
		"Admin",
		"User",
		"VehicleDashBoard",
		"vehicles",
		"vehicle",
		"defleeted",
		"vehicleBookings",
		"filter",
		"vehicleId",
		"id",
		"isVehicleAvailableToBook",
		"Available",
		"Defleeted",
		"Booked",
		"Parent",
		"args",
		"Class",
		"Reflect",
		"construct",
		"sham",
		"Proxy",
		"Date",
		"prototype",
		"toString",
		"call",
		"e",
		"isNativeReflectConstruct",
		"apply",
		"instance",
		"Function",
		"bind",
		"setPrototypeOf",
		"arguments",
		"_cache",
		"Map",
		"fn",
		"indexOf",
		"TypeError",
		"has",
		"get",
		"set",
		"Wrapper",
		"getPrototypeOf",
		"this",
		"constructor",
		"Object",
		"create",
		"enumerable",
		"writable",
		"configurable",
		"Booking",
		"meta",
		"reload",
		"Api",
		"execute",
		"then",
		"res",
		"canDelete",
		"approved",
		"delete",
		"approve",
		"approval",
		"finalize",
		"amount",
		"update",
		"params",
		"body",
		"fromId",
		"fetch",
		"fetchAll",
		"map",
		"b",
		"pay",
		"paid",
		"Location",
		"fromClientId",
		"clientId",
		"l",
		"Vehicle",
		"getLocation",
		"API_URL",
		"process",
		"ApiError",
		"message",
		"ServerQueryError",
		"errors",
		"FormErrors",
		"handleFormApiErrors",
		"fieldErrors",
		"formErrors",
		"action",
		"path",
		"config",
		"payload",
		"baseAxiosConfig",
		"withCredentials",
		"axios",
		"formData",
		"key",
		"FormData",
		"prop",
		"Blob",
		"append",
		"JSON",
		"stringify",
		"catch",
		"generateServerError",
		"post",
		"patch",
		"response",
		"BookingTable",
		"compose",
		"actions",
		"history",
		"fetchBookings",
		"isFetchingData",
		"setIsFetchingData",
		"isLoading",
		"tableData",
		"foundUser",
		"find",
		"u",
		"userId",
		"username",
		"bookingType",
		"finished",
		"to",
		"plateNumber",
		"model",
		"onApprove",
		"onDeny",
		"onUpdate",
		"onDelete",
		"onFinalize",
		"background",
		"onRefresh",
		"onPay",
		"getVehicleCost",
		"bookingChargeCount",
		"bookingCharge",
		"bookingChargeUnit",
		"mapDispatchToProps",
		"BookingCreateFormStepper",
		"locations",
		"withRouter",
		"fetchVehicles",
		"_",
		"debounce",
		"getAvailableVehicles",
		"toDate",
		"values",
		"setValues",
		"useEffect",
		"RoleUtils",
		"isRoleBetter",
		"setErrors",
		"errorNotes",
		"setErrorNotes",
		"touched",
		"setTouched",
		"vehicleList",
		"v",
		"brand",
		"locationId",
		"cost",
		"locationList",
		"lat",
		"lng",
		"userList",
		"onSubmit",
		"replace",
		"onFieldTouch",
		"onChange",
		"unix",
		"ModalConfirmDeleteBooking",
		"match",
		"bookingId",
		"content",
		"yes",
		"Number",
		"no",
		"ModalFormBookingUpdateBase",
		"props",
		"getVehicleLocation",
		"componentDidMount",
		"vehicleLocation",
		"setState",
		"state",
		"initializing",
		"componentDidUpdate",
		"prevProps",
		"prevState",
		"resetFields",
		"render",
		"open",
		"onClose",
		"formBookingUpdateValidationSchema",
		"cast",
		"stripUnknown",
		"context",
		"status",
		"FormStatus",
		"SUBMITTING",
		"Component",
		"ModalFormBookingUpdate",
		"ModalFormFinalizeBooking",
		"setBooking",
		"booker",
		"onCancel",
		"ModalConfirmPayBooking",
		"api",
		"fetchUnitSummaryReport",
		"field",
		"type",
		"rowData",
		"categories",
		"join"
	],
	"mappings": "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",
	"file": "static/js/2.05f953e0.chunk.js",
	"sourcesContent": [
		"import React, { FC, ReactNode } from \"react\";\r\nimport { connect, MapStateToProps } from \"react-redux\";\r\nimport { Role as RoleEnum } from \"../../../../shared/typings\";\r\nimport { ReduxState } from \"../../../typings\";\r\n\r\nexport { permission } from \"../../../variables/permissions\";\r\n\r\nexport interface RoleProps {\r\n\troles?: RoleEnum[];\r\n\texcludes?: RoleEnum[];\r\n\tchildren: ReactNode;\r\n}\r\n\r\ninterface RoleStateProps {\r\n\trole?: RoleEnum;\r\n}\r\n\r\ntype Props = RoleProps & RoleStateProps;\r\n\r\nconst Component: FC<Props> = ({ roles, children, role, excludes }) => {\r\n\tif (\r\n\t\trole &&\r\n\t\t((roles && roles.includes(role)) || (excludes && !excludes.includes(role)))\r\n\t) {\r\n\t\treturn <>{children}</>;\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nconst mapStateToProps: MapStateToProps<RoleStateProps, {}, ReduxState> = ({\r\n\tauth\r\n}) => ({\r\n\trole: (auth && auth.data && auth.data.role) || undefined\r\n});\r\n\r\nexport const Role = connect<RoleStateProps, {}, RoleProps, ReduxState>(\r\n\tmapStateToProps\r\n)(Component);\r\n",
		"import React, { FC, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { ReportArea as ReportAreaPresentational } from \"../presentational\";\r\nimport { UnitSummary } from \"../../utils/reports\";\r\nimport { Column } from \"material-table\";\r\nimport { ReduxState } from \"../../typings\";\r\n\r\nconst reportList = [\r\n\t{\r\n\t\tlabel: \"Unit Summary\",\r\n\t\tvalue: 1\r\n\t}\r\n];\r\n\r\ninterface ReportAreaStateProps {\r\n\tauth: ReduxState[\"auth\"];\r\n}\r\n\r\nconst getGenerator = (value: number | string) => {\r\n\tswitch (value) {\r\n\t\tcase 1: {\r\n\t\t\treturn new UnitSummary();\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\tthrow new Error(\"Unknown report value of \" + value);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport const ReportAreaContainer: FC<ReportAreaStateProps> = ({ auth }) => {\r\n\tconst [selectedReport, setSelectedReport] = useState<number | string>();\r\n\tconst [columns, setColumns] = useState<Array<Column<any>>>();\r\n\tconst [data, setData] = useState<object[]>();\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [tableTitle, setTableTitle] = useState(\"\");\r\n\r\n\treturn (\r\n\t\t<ReportAreaPresentational\r\n\t\t\ttitle={tableTitle}\r\n\t\t\treportList={reportList}\r\n\t\t\tdata={data}\r\n\t\t\tloading={loading}\r\n\t\t\tonSelect={value => {\r\n\t\t\t\tsetSelectedReport(value);\r\n\t\t\t}}\r\n\t\t\tcolumns={columns}\r\n\t\t\tonClick={async () => {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst report = selectedReport && getGenerator(selectedReport);\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst data = report && (await report.generate());\r\n\r\n\t\t\t\t\tconst columns =\r\n\t\t\t\t\t\tauth &&\r\n\t\t\t\t\t\tauth.data &&\r\n\t\t\t\t\t\treport &&\r\n\t\t\t\t\t\t(await report.getColumnData(auth.data.role));\r\n\t\t\t\t\tdata && setData(data);\r\n\t\t\t\t\treport && setTableTitle(report.title);\r\n\t\t\t\t\tcolumns && setColumns(columns);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t}\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}}\r\n\t\t\tvalue={selectedReport}\r\n\t\t></ReportAreaPresentational>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = ({ auth }: ReduxState): ReportAreaStateProps => ({\r\n\tauth\r\n});\r\n\r\nexport const ReportArea = connect<ReportAreaStateProps, {}, {}, ReduxState>(\r\n\tmapStateToProps\r\n)(ReportAreaContainer);\r\n",
		"import React, { FC } from \"react\";\r\nimport { connect, MapStateToProps } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { BarChart, BarChartProps } from \"../presentational\";\r\nimport { ReduxState } from \"../../typings\";\r\n\r\ninterface AccidentDashBoardStateProps {\r\n\taccidents: ReduxState[\"accidents\"];\r\n}\r\n\r\ntype Props = AccidentDashBoardStateProps;\r\n\r\nconst AccidentDashBoardBase: FC<Props> = ({ accidents }) => {\r\n\tconst lastYear = moment()\r\n\t\t.subtract(11, \"months\")\r\n\t\t.startOf(\"month\");\r\n\tconst currentTime = moment();\r\n\tconst data: BarChartProps<{ name: string; [key: string]: any }>[\"data\"] = [];\r\n\tconst bars: BarChartProps<{ name: string; [key: string]: any }>[\"bars\"] = [];\r\n\r\n\tif (accidents && accidents.data) {\r\n\t\tfor (\r\n\t\t\tconst i = lastYear.clone();\r\n\t\t\ti <= currentTime.startOf(\"month\");\r\n\t\t\ti.add(1, \"month\")\r\n\t\t) {\r\n\t\t\tconst monthName = i.format(\"MMM\");\r\n\t\t\tconst monthData: { name: string; [key: string]: any } = {\r\n\t\t\t\tname: monthName,\r\n\t\t\t\tcount: 0\r\n\t\t\t};\r\n\r\n\t\t\tfor (const accident of accidents.data) {\r\n\t\t\t\tconst accidentStart = moment(accident.createdAt, \"X\");\r\n\r\n\t\t\t\tif (accidentStart.isBetween(i, i.endOf(\"month\"))) {\r\n\t\t\t\t\tif (monthData.count === 0) {\r\n\t\t\t\t\t\tbars.push(monthName);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmonthData.count++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdata.push(monthData);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<BarChart title={`Year Accidents`} data={data || []} bars={bars} xAxis />\r\n\t);\r\n};\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n\tAccidentDashBoardStateProps,\r\n\t{},\r\n\tReduxState\r\n> = ({ accidents }) => ({ accidents });\r\n\r\nexport const AccidentDashBoard = connect(mapStateToProps)(\r\n\tAccidentDashBoardBase\r\n);\r\n",
		"import React, { FC } from \"react\";\r\nimport { connect, MapStateToProps } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { BarChart, BarChartProps } from \"../presentational\";\r\nimport { getBookingStatus, toTitleWords } from \"../../utils/helpers\";\r\nimport { ReduxState, FlattenIfArray } from \"../../typings\";\r\nimport { BookingStatus } from \"../../../shared/typings\";\r\n\r\ninterface BookingDashBoardStateProps {\r\n\tbookings: ReduxState[\"bookings\"];\r\n}\r\n\r\ntype Props = BookingDashBoardStateProps;\r\n\r\nconst BookingDashBoardBase: FC<Props> = ({ bookings }) => {\r\n\tconst lastYear = moment()\r\n\t\t.subtract(11, \"months\")\r\n\t\t.startOf(\"month\");\r\n\tconst currentTime = moment();\r\n\tconst data: BarChartProps<{ name: string; [key: string]: any }>[\"data\"] = [];\r\n\tconst bars: BarChartProps<{ name: string; [key: string]: any }>[\"bars\"] = [];\r\n\r\n\tif (bookings && bookings.data) {\r\n\t\tfor (\r\n\t\t\tconst i = lastYear.clone();\r\n\t\t\ti <= currentTime.startOf(\"month\");\r\n\t\t\ti.add(1, \"month\")\r\n\t\t) {\r\n\t\t\tconst monthData: { name: string; [key: string]: any } = {\r\n\t\t\t\tname: i.format(\"MMM\")\r\n\t\t\t};\r\n\t\t\tfor (const booking of bookings.data) {\r\n\t\t\t\tconst bookingStart = moment(booking.from, \"X\");\r\n\r\n\t\t\t\tif (bookingStart.isBetween(i, i.endOf(\"month\"))) {\r\n\t\t\t\t\tconst bookingStatus = toTitleWords(getBookingStatus(booking));\r\n\t\t\t\t\tif (monthData[bookingStatus]) {\r\n\t\t\t\t\t\tmonthData[bookingStatus]++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbars.push(bookingStatus);\r\n\t\t\t\t\t\tmonthData[bookingStatus] = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdata.push(monthData);\r\n\t\t}\r\n\t}\r\n\r\n\treturn <BarChart title=\"Year Bookings\" data={data} bars={bars} />;\r\n};\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n\tBookingDashBoardStateProps,\r\n\t{},\r\n\tReduxState\r\n> = ({ bookings }) => ({ bookings });\r\n\r\nexport const BookingDashBoard = connect(mapStateToProps)(BookingDashBoardBase);\r\n",
		"import React, { FC } from \"react\";\r\nimport { connect, MapStateToProps } from \"react-redux\";\r\nimport { BarChart } from \"../presentational\";\r\nimport { ReduxState } from \"../../typings\";\r\nimport { Role } from \"../../../shared/typings\";\r\n\r\ninterface UserDashBoardStateProps {\r\n\tusers: ReduxState[\"users\"];\r\n\tauth: ReduxState[\"auth\"];\r\n}\r\n\r\ntype Props = UserDashBoardStateProps;\r\n\r\nconst UserDashBoardBase: FC<Props> = ({ users, auth }) => {\r\n\tconst bars = [\"Admin\", \"Key Manager\", \"User\"];\r\n\tif (auth && auth.data && auth.data.role === Role.MASTER) {\r\n\t\tbars.unshift(\"Master\");\r\n\t}\r\n\tconst data: any[] | null =\r\n\t\tusers &&\r\n\t\tusers.data &&\r\n\t\tusers.data.reduce(\r\n\t\t\t(acc, user) => {\r\n\t\t\t\tswitch (user.role) {\r\n\t\t\t\t\tcase Role.MASTER: {\r\n\t\t\t\t\t\tacc[0][\"Master\"]++;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase Role.ADMIN: {\r\n\t\t\t\t\t\tacc[0][\"Admin\"]++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase Role.KEY_MANAGER: {\r\n\t\t\t\t\t\tacc[0][\"Key Manager\"]++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcase Role.GUEST: {\r\n\t\t\t\t\t\tacc[0][\"User\"]++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn acc;\r\n\t\t\t},\r\n\t\t\t[{ Master: 0, Admin: 0, \"Key Manager\": 0, User: 0, name: \"User roles\" }]\r\n\t\t);\r\n\r\n\treturn <BarChart title=\"User Count\" data={data || []} bars={bars} />;\r\n};\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n\tUserDashBoardStateProps,\r\n\t{},\r\n\tReduxState\r\n> = ({ users, auth }) => ({ users, auth });\r\n\r\nexport const UserDashBoard = connect(mapStateToProps)(UserDashBoardBase);\r\n",
		"import React, { FC } from \"react\";\r\nimport { connect, MapStateToProps } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { BarChart } from \"../presentational\";\r\n\r\nimport { isVehicleAvailableToBook } from \"../../utils\";\r\nimport { ReduxState } from \"../../typings\";\r\n\r\ninterface VehicleDashBoardStateProps {\r\n\tvehicles: ReduxState[\"vehicles\"];\r\n\tbookings: ReduxState[\"bookings\"];\r\n}\r\n\r\ntype Props = VehicleDashBoardStateProps;\r\n\r\nconst VehicleDashBoardBase: FC<Props> = ({ vehicles, bookings }) => {\r\n\tconst data =\r\n\t\tbookings &&\r\n\t\tbookings.data &&\r\n\t\tvehicles &&\r\n\t\tvehicles.data &&\r\n\t\tvehicles.data.reduce(\r\n\t\t\t(acc, vehicle) => {\r\n\t\t\t\tif (!vehicle.defleeted && bookings && bookings.data) {\r\n\t\t\t\t\tconst vehicleBookings = bookings.data.filter(\r\n\t\t\t\t\t\tbooking => booking.vehicleId === vehicle.id\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (isVehicleAvailableToBook(vehicleBookings)) {\r\n\t\t\t\t\t\tacc[0].Available++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (vehicle.defleeted) {\r\n\t\t\t\t\tacc[0].Defleeted++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tacc[0].Booked++;\r\n\t\t\t\t}\r\n\t\t\t\treturn acc;\r\n\t\t\t},\r\n\t\t\t[{ Available: 0, Defleeted: 0, Booked: 0, name: \"Vehicle statuses\" }]\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<BarChart\r\n\t\t\txAxis\r\n\t\t\ttitle=\"Vehicle Status\"\r\n\t\t\tdata={data || []}\r\n\t\t\tbars={[\"Available\", \"Defleeted\", \"Booked\"]}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n\tVehicleDashBoardStateProps,\r\n\t{},\r\n\tReduxState\r\n> = ({ vehicles, bookings }) => ({ vehicles, bookings });\r\n\r\nexport const VehicleDashBoard = connect(mapStateToProps)(VehicleDashBoardBase);\r\n",
		"import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}",
		"import getPrototypeOf from \"./getPrototypeOf\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeFunction from \"./isNativeFunction\";\nimport construct from \"./construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}",
		"export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}",
		"import { Api } from \".\";\r\nimport { PartialExcept, ServerResponseMeta } from \"../typings\";\r\nimport { BookingType, Role } from \"../../shared/typings\";\r\n\r\ninterface BookingAttributes {\r\n\tid: number;\r\n\tpaid: boolean;\r\n\tamount: number | null;\r\n\tfrom: number;\r\n\tto: number;\r\n\tapproved: boolean | null;\r\n\tfinished: boolean;\r\n\tstartMileage: number | null;\r\n\tendMileage: number | null;\r\n\tstartFuel: number | null;\r\n\tendFuel: number | null;\r\n\tuserId: number;\r\n\tvehicleId: number;\r\n\tbookingType: BookingType;\r\n\treplaceVehicleId: number | null;\r\n\tvehicle: {\r\n\t\tid: number;\r\n\t\tvin: string;\r\n\t\tplateNumber: string;\r\n\t\tbrand: string;\r\n\t\tmodel: string;\r\n\t};\r\n\r\n\treadonly createdAt: Date;\r\n\treadonly updatedAt: Date;\r\n}\r\n\r\nexport interface BookingCreateParams\r\n\textends Omit<\r\n\t\tBookingAttributes,\r\n\t\t| \"id\"\r\n\t\t| \"paid\"\r\n\t\t| \"amount\"\r\n\t\t| \"approved\"\r\n\t\t| \"finished\"\r\n\t\t| \"startMileage\"\r\n\t\t| \"endMileage\"\r\n\t\t| \"startFuel\"\r\n\t\t| \"endFuel\"\r\n\t\t| \"replaceVehicleId\"\r\n\t\t| \"createdAt\"\r\n\t\t| \"updatedAt\"\r\n\t\t| \"vehicle\"\r\n\t\t| \"finalized\"\r\n\t> {\r\n\treplaceVehicle?: {\r\n\t\tvin: string;\r\n\t\tplateNumber: string;\r\n\t\tbrand: string;\r\n\t\tmodel: string;\r\n\t};\r\n}\r\n\r\nexport type BookingUpdateParams = Partial<Omit<BookingAttributes, \"id\">>;\r\n\r\nexport type BookingGetResponseItem = BookingAttributes;\r\n\r\nexport class Booking {\r\n\tconstructor(\r\n\t\tpublic data: BookingGetResponseItem,\r\n\t\tpublic meta: ServerResponseMeta\r\n\t) {}\r\n\r\n\tpublic static fromId = (id: number) =>\r\n\t\tApi.execute<BookingAttributes>(\r\n\t\t\t\"get\",\r\n\t\t\t`/api/carbooking/bookings/${id}`\r\n\t\t).then(res => {\r\n\t\t\tconst { data, ...meta } = res;\r\n\t\t\treturn new Booking(data, meta);\r\n\t\t});\r\n\r\n\tpublic reload = () =>\r\n\t\tApi.execute<BookingAttributes>(\r\n\t\t\t\"get\",\r\n\t\t\t`/api/carbooking/bookings/${this.data.id}`\r\n\t\t).then(res => {\r\n\t\t\tconst { data, ...meta } = res;\r\n\t\t\tthis.data = { ...data };\r\n\t\t\tthis.meta = { ...meta };\r\n\t\t\treturn this;\r\n\t\t});\r\n\r\n\tpublic static fetch = (id: number) =>\r\n\t\tApi.execute<BookingAttributes>(\r\n\t\t\t\"get\",\r\n\t\t\t`/api/carbooking/bookings/${id}`\r\n\t\t).then(res => {\r\n\t\t\tconst { data, ...meta } = res;\r\n\t\t\treturn new Booking(res.data, meta);\r\n\t\t});\r\n\r\n\tpublic static create = (params: BookingCreateParams) =>\r\n\t\tApi.execute<BookingAttributes, BookingCreateParams>(\r\n\t\t\t\"post\",\r\n\t\t\t`/api/carbooking/bookings`,\r\n\t\t\t{\r\n\t\t\t\tbody: params\r\n\t\t\t}\r\n\t\t).then(res => {\r\n\t\t\tconst { data, ...meta } = res;\r\n\t\t\treturn new Booking(res.data, meta);\r\n\t\t});\r\n\r\n\tpublic static fetchAll = () =>\r\n\t\tApi.execute<BookingAttributes[]>(\"get\", \"/api/carbooking/bookings\").then(\r\n\t\t\tres => {\r\n\t\t\t\tconst { data, ...meta } = res;\r\n\t\t\t\treturn data.map(b => new Booking(b, meta));\r\n\t\t\t}\r\n\t\t);\r\n\r\n\tpublic canDelete = (role: Role) => {\r\n\t\treturn this.data.approved === null || role === Role.ADMIN;\r\n\t};\r\n\r\n\tpublic static delete = (id: number) =>\r\n\t\tApi.execute<BookingAttributes>(\r\n\t\t\t\"delete\",\r\n\t\t\t`/api/carbooking/bookings/${id}`\r\n\t\t).then(res => {\r\n\t\t\tconst { data, ...meta } = res;\r\n\t\t\treturn new Booking(data, meta);\r\n\t\t});\r\n\r\n\tpublic delete = () => Booking.delete(this.data.id);\r\n\tpublic approve = (approval?: boolean) =>\r\n\t\tBooking.approve(this.data.id, approval);\r\n\r\n\tpublic static approve = (id: number, approval?: boolean) =>\r\n\t\tBooking.update(id, { approved: approval === undefined ? true : approval });\r\n\r\n\tpublic static pay = (id: number) => Booking.update(id, { paid: true });\r\n\r\n\tpublic static update = (id: number, params: BookingUpdateParams) =>\r\n\t\tApi.execute<BookingAttributes, BookingUpdateParams>(\r\n\t\t\t\"patch\",\r\n\t\t\t`/api/carbooking/bookings/${id}`,\r\n\t\t\t{ body: params }\r\n\t\t).then(res => {\r\n\t\t\tconst { data, ...meta } = res;\r\n\t\t\treturn new Booking(data, meta);\r\n\t\t});\r\n\r\n\tpublic finalize = (amount: number) => this.update({ amount });\r\n\r\n\tpublic update = (params: BookingUpdateParams) =>\r\n\t\tApi.execute<BookingAttributes, BookingUpdateParams>(\r\n\t\t\t\"patch\",\r\n\t\t\t`/api/carbooking/bookings/${this.data.id}`,\r\n\t\t\t{ body: params }\r\n\t\t).then(res => {\r\n\t\t\tconst { data, ...meta } = res;\r\n\t\t\tthis.data = { ...this.data, ...data };\r\n\t\t\tthis.meta = meta;\r\n\t\t\treturn this;\r\n\t\t});\r\n}\r\n",
		"import { Api } from \".\";\r\nimport { ServerResponseMeta } from \"../typings\";\r\n\r\nexport interface LocationAttributes {\r\n\tid: number;\r\n\tname: string;\r\n\tlat: number;\r\n\tlng: number;\r\n\taddress: string;\r\n\tlocationImageSrc: string | null;\r\n\r\n\treadonly createdAt: Date;\r\n\treadonly updatedAt: Date;\r\n}\r\n\r\nexport class Location {\r\n\tconstructor(\r\n\t\tpublic data: LocationAttributes,\r\n\t\tpublic meta: ServerResponseMeta\r\n\t) {}\r\n\r\n\tpublic static fromClientId = (clientId: number) =>\r\n\t\tApi.execute<LocationAttributes[]>(\r\n\t\t\t\"get\",\r\n\t\t\t`/api/carbooking/clients/${clientId}/locations`\r\n\t\t).then(({ data, ...meta }) => {\r\n\t\t\treturn data.map(l => new Location(l, meta));\r\n\t\t});\r\n}\r\n",
		"import { BookingChargeUnit } from \"../../shared/typings\";\r\nimport { PartialExcept, ServerResponseMeta } from \"../typings\";\r\nimport { Api, LocationAttributes, Location } from \".\";\r\n\r\nexport interface VehicleAttributes {\r\n\tid: number;\r\n\tbrand: string;\r\n\tmodel: string;\r\n\tplateNumber: string;\r\n\tvin: string;\r\n\tdefleeted: boolean;\r\n\tparkingLocation: string | null;\r\n\tvehicleImageSrc: string | null;\r\n\tbookingChargeCount: number;\r\n\tbookingCharge: number;\r\n\twialonUnitId: number | null;\r\n\tbookingChargeUnit: BookingChargeUnit | null;\r\n\tclientId: number | null;\r\n\tlocationId: number | null;\r\n\r\n\treadonly createdAt: Date;\r\n\treadonly updatedAt: Date;\r\n}\r\n\r\nexport class Vehicle {\r\n\tconstructor(\r\n\t\tpublic data: PartialExcept<VehicleAttributes, \"id\">,\r\n\t\tpublic meta?: ServerResponseMeta\r\n\t) {}\r\n\r\n\tpublic static getLocation = async (vehicleId: number) =>\r\n\t\tApi.execute<LocationAttributes | null>(\r\n\t\t\t\"get\",\r\n\t\t\t`/api/carbooking/vehicles/${vehicleId}/location`\r\n\t\t).then(({ data, ...meta }) =>\r\n\t\t\tdata !== null ? new Location(data, meta) : null\r\n\t\t);\r\n}\r\n",
		"import axios, { AxiosRequestConfig, AxiosError } from \"axios\";\r\nimport { WithServerResponse } from \"../typings\";\r\nimport { FormErrors } from \"../utils\";\r\n\r\nexport * from \"./Booking\";\r\nexport * from \"./Location\";\r\nexport * from \"./Vehicle\";\r\n\r\nexport const API_URL = process.env.REACT_APP_CAR_BOOKING_API_DOMAIN;\r\n\r\ntype ActionTypes = \"get\" | \"post\" | \"delete\" | \"patch\";\r\n\r\ntype Config = {\r\n\tformData?: boolean;\r\n\taxios?: AxiosRequestConfig;\r\n};\r\n\r\nexport class ApiError extends Error {\r\n\tconstructor(message: string) {\r\n\t\tsuper(message);\r\n\t}\r\n}\r\n\r\nexport class ServerQueryError<\r\n\tData extends WithServerResponse<any>\r\n> extends Error {\r\n\tconstructor(message: string, data: Data) {\r\n\t\tsuper(message);\r\n\t\tthis.errors = FormErrors.handleFormApiErrors(data);\r\n\t}\r\n\tprivate errors: FormErrors<Data>;\r\n\r\n\tget fieldErrors() {\r\n\t\treturn this.errors.fieldErrors;\r\n\t}\r\n\tget formErrors() {\r\n\t\treturn this.errors.formErrors;\r\n\t}\r\n}\r\n\r\nexport class NetworkError extends Error {}\r\n\r\nexport abstract class Api {\r\n\tprivate static generateServerError = (\r\n\t\terror: AxiosError<WithServerResponse<null>>\r\n\t) => {\r\n\t\tif (error.response) {\r\n\t\t\tthrow new ServerQueryError(\r\n\t\t\t\terror.response.data.message,\r\n\t\t\t\terror.response.data\r\n\t\t\t);\r\n\t\t}\r\n\t\tthrow new ApiError(error.message);\r\n\t};\r\n\tpublic static async execute<Response>(\r\n\t\taction: ActionTypes,\r\n\t\tpath: string,\r\n\t\tconfig?: Config\r\n\t): Promise<WithServerResponse<Response>>;\r\n\tpublic static async execute<Response, Body extends object>(\r\n\t\taction: ActionTypes,\r\n\t\tpath: string,\r\n\t\tconfig?: Config & { body?: Body }\r\n\t): Promise<WithServerResponse<Response>>;\r\n\tpublic static async execute<Response, Body extends object>(\r\n\t\taction: ActionTypes,\r\n\t\tpath: string,\r\n\t\tconfig: Config & { body?: Body } = {}\r\n\t): Promise<WithServerResponse<Response>> {\r\n\t\tlet payload: FormData | Body | undefined = config.body;\r\n\t\tconst baseAxiosConfig: AxiosRequestConfig = {\r\n\t\t\twithCredentials: true,\r\n\t\t\t...config.axios\r\n\t\t};\r\n\r\n\t\tif (payload !== undefined && config.formData) {\r\n\t\t\tpayload = new FormData();\r\n\t\t\tfor (let key in config.body) {\r\n\t\t\t\tconst prop = config.body[key];\r\n\t\t\t\tif (prop instanceof Blob) {\r\n\t\t\t\t\tpayload.append(key, prop);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpayload.append(key, JSON.stringify(prop));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbaseAxiosConfig[\"headers\"] = {\r\n\t\t\t\t\"Content-Type\": \"multipart/form-data\"\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tswitch (action) {\r\n\t\t\tcase \"get\":\r\n\t\t\t\treturn axios\r\n\t\t\t\t\t.get<WithServerResponse<Response>>(\r\n\t\t\t\t\t\t`${API_URL}${path}`,\r\n\t\t\t\t\t\tbaseAxiosConfig\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.then(data => data.data)\r\n\t\t\t\t\t.catch(Api.generateServerError);\r\n\t\t\tcase \"post\":\r\n\t\t\t\treturn axios\r\n\t\t\t\t\t.post<WithServerResponse<Response>>(\r\n\t\t\t\t\t\t`${API_URL}${path}`,\r\n\t\t\t\t\t\tpayload,\r\n\t\t\t\t\t\tbaseAxiosConfig\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.then(data => data.data)\r\n\t\t\t\t\t.catch(Api.generateServerError);\r\n\t\t\tcase \"patch\":\r\n\t\t\t\treturn axios\r\n\t\t\t\t\t.patch<WithServerResponse<Response>>(\r\n\t\t\t\t\t\t`${API_URL}${path}`,\r\n\t\t\t\t\t\tpayload,\r\n\t\t\t\t\t\tbaseAxiosConfig\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.then(data => data.data)\r\n\t\t\t\t\t.catch(Api.generateServerError);\r\n\t\t\tcase \"delete\":\r\n\t\t\t\treturn axios\r\n\t\t\t\t\t.delete<WithServerResponse<Response>>(\r\n\t\t\t\t\t\t`${API_URL}${path}`,\r\n\t\t\t\t\t\tbaseAxiosConfig\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.then(data => data.data)\r\n\t\t\t\t\t.catch(Api.generateServerError);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Unknown error ${action}`);\r\n\t\t}\r\n\t}\r\n}\r\n",
		"import React, { FC, useState } from \"react\";\r\nimport { connect, ResolveThunks, MapStateToProps } from \"react-redux\";\r\nimport { RouteChildrenProps, withRouter } from \"react-router\";\r\nimport moment from \"moment\";\r\nimport { compose } from \"recompose\";\r\nimport {\r\n\tBookingTable as BookingTablePresentational,\r\n\tBookingTableItemData\r\n} from \"../presentational\";\r\nimport { BookingType, Role } from \"../../../shared/typings\";\r\nimport { BOOKING_TABLE_DATA } from \"../../fixtures\";\r\nimport * as actions from \"../../actions\";\r\nimport { ReduxState } from \"../../typings\";\r\nimport { Booking } from \"../../api\";\r\n\r\ninterface BookingTableStateProps {\r\n\tbookings: ReduxState[\"bookings\"];\r\n\tusers: ReduxState[\"users\"];\r\n\tauth: ReduxState[\"auth\"];\r\n}\r\n\r\ntype BookingTableActionProps = ResolveThunks<typeof actions>;\r\n\r\ntype Props = BookingTableStateProps &\r\n\tBookingTableActionProps &\r\n\tRouteChildrenProps;\r\n\r\nconst BookingTableBase: FC<Props> = ({\r\n\tbookings,\r\n\thistory,\r\n\tusers,\r\n\tauth,\r\n\tfetchBookings\r\n}) => {\r\n\t// TODO: Redirect if action route is invalid.\r\n\tconst [isFetchingData, setIsFetchingData] = useState(false);\r\n\r\n\tconst isLoading = isFetchingData || bookings === null;\r\n\tconst tableData: BookingTableItemData[] =\r\n\t\t(auth &&\r\n\t\t\tauth.data &&\r\n\t\t\tbookings &&\r\n\t\t\tbookings.data.map<BookingTableItemData>(b => {\r\n\t\t\t\tconst foundUser = users && users.data.find(u => u.id === b.userId);\r\n\t\t\t\tconst username =\r\n\t\t\t\t\tauth.data.id === b.userId\r\n\t\t\t\t\t\t? auth.data.username\r\n\t\t\t\t\t\t: (foundUser && foundUser.username) || \"Unknown User\";\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tamount: b.amount,\r\n\t\t\t\t\tapproved: b.approved,\r\n\t\t\t\t\tbookingType: b.bookingType,\r\n\t\t\t\t\tcreatedAt: b.createdAt,\r\n\t\t\t\t\tfinished: b.finished,\r\n\t\t\t\t\tfrom: b.from,\r\n\t\t\t\t\tid: b.id,\r\n\t\t\t\t\tpaid: b.paid,\r\n\t\t\t\t\tto: b.to,\r\n\t\t\t\t\tusername,\r\n\t\t\t\t\tvehicle: `${b.vehicle.plateNumber} - ${b.vehicle.model} ${b.vehicle.model}`\r\n\t\t\t\t};\r\n\t\t\t})) ||\r\n\t\t[];\r\n\treturn (\r\n\t\t(auth && auth.data && (\r\n\t\t\t<BookingTablePresentational\r\n\t\t\t\tdata={tableData}\r\n\t\t\t\tisLoading={isLoading}\r\n\t\t\t\tonApprove={async ({ id }) => {\r\n\t\t\t\t\tsetIsFetchingData(true);\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst booking = await Booking.fromId(id);\r\n\t\t\t\t\t\tawait booking.approve();\r\n\t\t\t\t\t\tawait fetchBookings();\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t// TODO: Display modal to user.\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetIsFetchingData(false);\r\n\t\t\t\t}}\r\n\t\t\t\tonDeny={async ({ id }) => {\r\n\t\t\t\t\tsetIsFetchingData(true);\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait Booking.approve(id);\r\n\t\t\t\t\t\tawait fetchBookings();\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t// TODO: Display modal to user.\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetIsFetchingData(false);\r\n\t\t\t\t}}\r\n\t\t\t\tonUpdate={({ id }) => {\r\n\t\t\t\t\thistory.push(`/bookings/edit/${id}`);\r\n\t\t\t\t}}\r\n\t\t\t\tonDelete={({ id }) => {\r\n\t\t\t\t\thistory.push(`/bookings/delete/${id}`);\r\n\t\t\t\t}}\r\n\t\t\t\tonFinalize={({ id }) => {\r\n\t\t\t\t\thistory.push(`/bookings/finalize/${id}`, {\r\n\t\t\t\t\t\tbackground: true\r\n\t\t\t\t\t});\r\n\t\t\t\t}}\r\n\t\t\t\tonRefresh={async () => {\r\n\t\t\t\t\tsetIsFetchingData(true);\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait fetchBookings();\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t// TODO: Display modal to user.\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetIsFetchingData(false);\r\n\t\t\t\t}}\r\n\t\t\t\tonPay={({ id }) => {\r\n\t\t\t\t\thistory.push(`/bookings/pay/${id}`);\r\n\t\t\t\t}}\r\n\t\t\t\trole={auth.data.role}\r\n\t\t\t/>\r\n\t\t)) ||\r\n\t\tnull\r\n\t);\r\n};\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n\tBookingTableStateProps,\r\n\t{},\r\n\tReduxState\r\n> = ({ bookings, users, auth }) => ({ bookings, users, auth });\r\n\r\nexport const BookingTable = compose<Props, {}>(\r\n\tconnect(mapStateToProps, actions)\r\n)(BookingTableBase);\r\n",
		"import React, { FC, useState, useEffect } from \"react\";\r\nimport { withRouter, RouteChildrenProps } from \"react-router\";\r\nimport { compose } from \"recompose\";\r\nimport moment from \"moment\";\r\nimport {\r\n\tconnect,\r\n\tMapStateToProps,\r\n\tMapDispatchToProps,\r\n\tResolveThunks\r\n} from \"react-redux\";\r\nimport * as actions from \"../../actions\";\r\nimport {\r\n\tBookingCreateFormStepper as BookingCreateFormStepperPresentational,\r\n\tBookingCreateFormStepperVehicleItem,\r\n\tBookingCreateFormStepperLocationItem,\r\n\tBookingCreateFormStepperValues,\r\n\tFormError,\r\n\tTouchedFields,\r\n\tFieldSelectItems\r\n} from \"../presentational\";\r\nimport _ from \"lodash\";\r\nimport { ReduxState } from \"../../typings\";\r\nimport { Role, BookingChargeUnit } from \"../../../shared/typings\";\r\nimport { RoleUtils } from \"../../utils\";\r\nimport { Booking, ServerQueryError } from \"../../api\";\r\n\r\ninterface BookingCreateFormStepperStateProps {\r\n\tvehicles: ReduxState[\"vehicles\"];\r\n\tlocations: ReduxState[\"locations\"];\r\n\tauth: ReduxState[\"auth\"];\r\n\tusers: ReduxState[\"users\"];\r\n\tbookings: ReduxState[\"bookings\"];\r\n}\r\n\r\ntype Props = BookingCreateFormStepperStateProps &\r\n\tResolveThunks<typeof actions> &\r\n\tRouteChildrenProps;\r\n\r\nconst getVehicleCost = (\r\n\tbookingChargeCount: number,\r\n\tbookingCharge: number,\r\n\tbookingChargeUnit: BookingChargeUnit | null\r\n): string | undefined => {\r\n\tif (bookingChargeUnit) {\r\n\t\treturn `Cost: ${bookingCharge} Dhs per${\r\n\t\t\tbookingChargeCount === 1 ? \" \" : ` ${bookingChargeCount}`\r\n\t\t} ${bookingChargeUnit}`;\r\n\t}\r\n};\r\n\r\nexport const BookingCreateFormStepperBase: FC<Props> = ({\r\n\tvehicles,\r\n\tlocations,\r\n\tauth,\r\n\tusers,\r\n\tbookings,\r\n\tfetchVehicles,\r\n\tfetchBookings,\r\n\thistory\r\n}) => {\r\n\tconst [getAvailableVehicles] = useState<(from: number, to: number) => void>(\r\n\t\t() =>\r\n\t\t\t_.debounce((from: number, to: number) => {\r\n\t\t\t\tfetchVehicles(from, to);\r\n\t\t\t\tfetchBookings();\r\n\t\t\t}, 1000)\r\n\t);\r\n\r\n\tconst [values, setValues] = useState<any>({\r\n\t\tfrom: moment().toDate(),\r\n\t\tto: moment()\r\n\t\t\t.add(1, \"day\")\r\n\t\t\t.toDate()\r\n\t});\r\n\tconst role = (auth && auth.data && auth.data.role) || null;\r\n\tuseEffect(() => {\r\n\t\tif (role && auth && auth.data && auth.data.role) {\r\n\t\t\tif (!RoleUtils.isRoleBetter(Role.KEY_MANAGER, role)) {\r\n\t\t\t\tsetValues({ ...values, userId: auth.data.id });\r\n\t\t\t}\r\n\t\t}\r\n\t}, [auth]);\r\n\r\n\tconst [errors, setErrors] = useState<\r\n\t\tFormError<BookingCreateFormStepperValues>\r\n\t>({});\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\tconst [errorNotes, setErrorNotes] = useState<string[]>([]);\r\n\tconst [touched, setTouched] = useState<\r\n\t\tTouchedFields<BookingCreateFormStepperValues>\r\n\t>({\r\n\t\tfrom: true,\r\n\t\tto: true\r\n\t});\r\n\r\n\tconst vehicleList: BookingCreateFormStepperVehicleItem[] =\r\n\t\t(auth &&\r\n\t\t\tvehicles &&\r\n\t\t\tvehicles.data &&\r\n\t\t\tvehicles.data\r\n\t\t\t\t.filter(v => {\r\n\t\t\t\t\tconst user =\r\n\t\t\t\t\t\tauth.data.role === Role.GUEST\r\n\t\t\t\t\t\t\t? auth.data\r\n\t\t\t\t\t\t\t: values.userId &&\r\n\t\t\t\t\t\t\t  users &&\r\n\t\t\t\t\t\t\t  users.data.find(u => u.id === values.userId);\r\n\t\t\t\t\treturn user && user.clientId === v.clientId;\r\n\t\t\t\t})\r\n\t\t\t\t.map(v => ({\r\n\t\t\t\t\tlabel: `${v.brand} ${v.model}`,\r\n\t\t\t\t\tplateNumber: v.plateNumber,\r\n\t\t\t\t\tid: v.id,\r\n\t\t\t\t\tlocationId: v.locationId as number,\r\n\t\t\t\t\tcost: getVehicleCost(\r\n\t\t\t\t\t\tv.bookingChargeCount,\r\n\t\t\t\t\t\tv.bookingCharge,\r\n\t\t\t\t\t\tv.bookingChargeUnit\r\n\t\t\t\t\t)\r\n\t\t\t\t}))) ||\r\n\t\t[];\r\n\tconst locationList: BookingCreateFormStepperLocationItem[] =\r\n\t\t(locations &&\r\n\t\t\tlocations.data !== null &&\r\n\t\t\tlocations.data.map(l => ({\r\n\t\t\t\tlat: l.lat,\r\n\t\t\t\tlng: l.lng,\r\n\t\t\t\tvalue: l.id,\r\n\t\t\t\tlabel: l.name\r\n\t\t\t}))) ||\r\n\t\t[];\r\n\r\n\tconst userList: FieldSelectItems | undefined =\r\n\t\t(role &&\r\n\t\t\tRoleUtils.isRoleBetter(Role.KEY_MANAGER, role) &&\r\n\t\t\tusers &&\r\n\t\t\tusers.data &&\r\n\t\t\tusers.data\r\n\t\t\t\t.filter(u => u.role === Role.GUEST)\r\n\t\t\t\t.map(u => ({\r\n\t\t\t\t\tlabel: u.username,\r\n\t\t\t\t\tvalue: u.id\r\n\t\t\t\t}))) ||\r\n\t\tundefined;\r\n\r\n\treturn auth && auth.data && bookings && bookings.data && role ? (\r\n\t\t<BookingCreateFormStepperPresentational\r\n\t\t\tloading={loading}\r\n\t\t\tusers={userList}\r\n\t\t\tonSubmit={async v => {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait Booking.create(v);\r\n\t\t\t\t\thistory.replace(\"/bookings\");\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tif (e instanceof ServerQueryError) {\r\n\t\t\t\t\t\tsetErrors(e.fieldErrors);\r\n\t\t\t\t\t\tsetErrorNotes(e.formErrors);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetErrorNotes(e.message);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}}\r\n\t\t\tbookings={bookings.data}\r\n\t\t\tvalues={values}\r\n\t\t\tvehicles={vehicleList}\r\n\t\t\tlocations={locationList}\r\n\t\t\tonFieldTouch={setTouched}\r\n\t\t\ttouched={touched}\r\n\t\t\terrors={errors}\r\n\t\t\terrorNotes={errorNotes}\r\n\t\t\tonChange={(values, errors) => {\r\n\t\t\t\tsetValues(values);\r\n\t\t\t\tsetErrors(errors);\r\n\t\t\t\tif (values.from && values.to) {\r\n\t\t\t\t\tgetAvailableVehicles(\r\n\t\t\t\t\t\tmoment(values.from).unix(),\r\n\t\t\t\t\t\tmoment(values.to).unix()\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t/>\r\n\t) : null;\r\n};\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n\tBookingCreateFormStepperStateProps,\r\n\t{},\r\n\tReduxState\r\n> = ({ auth, bookings, users, vehicles, locations }) => ({\r\n\tauth,\r\n\tbookings,\r\n\tusers,\r\n\tvehicles,\r\n\tlocations\r\n});\r\n\r\nconst mapDispatchToProps: MapDispatchToProps<typeof actions, {}> = actions;\r\n\r\nexport const BookingCreateFormStepper = compose<Props, {}>(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithRouter\r\n)(BookingCreateFormStepperBase);\r\n",
		"import React, { FC, useState, useEffect } from \"react\";\r\nimport { connect, ResolveThunks } from \"react-redux\";\r\nimport { RouteChildrenProps } from \"react-router\";\r\nimport { ModalConfirm } from \"../presentational\";\r\nimport { Booking } from \"../../api\";\r\nimport * as actions from \"../../actions\";\r\n\r\ntype Props = RouteChildrenProps<{ id?: string }, {}> &\r\n\tResolveThunks<typeof actions>;\r\n\r\nconst ModalConfirmDeleteBookingBase: FC<Props> = ({\r\n\thistory,\r\n\tmatch,\r\n\tfetchBookings\r\n}) => {\r\n\tconst bookingId = match?.params.id;\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\tuseEffect(() => {\r\n\t\tif (!bookingId) {\r\n\t\t\thistory.push(\"/bookings\");\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<ModalConfirm\r\n\t\t\tcontent={`Are you sure you want to delete booking #${bookingId}?`}\r\n\t\t\ttitle=\"Deleting...\"\r\n\t\t\tloading={loading}\r\n\t\t\tyes={async () => {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tif (bookingId) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait Booking.delete(Number(bookingId));\r\n\t\t\t\t\t\tfetchBookings();\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t// TODO: show error in modal.\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\thistory.push(\"/bookings\");\r\n\t\t\t}}\r\n\t\t\tno={() => {\r\n\t\t\t\thistory.push(\"/bookings\");\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport const ModalConfirmDeleteBooking = connect(\r\n\tnull,\r\n\tactions\r\n)(ModalConfirmDeleteBookingBase);\r\n",
		"import React, { Component } from \"react\";\r\nimport { RouteChildrenProps, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\nimport _ from \"lodash\";\r\nimport {\r\n\tFormBookingUpdate,\r\n\tModal,\r\n\tFormBookingUpdateValues,\r\n\tFormStatus,\r\n\tformBookingUpdateValidationSchema,\r\n\tFormError,\r\n\tTouchedFields,\r\n\tFieldSelectItems\r\n} from \"../presentational\";\r\nimport { Booking, LocationAttributes, Location, Vehicle } from \"../../api\";\r\nimport { ResolveThunks, connect, MapStateToProps } from \"react-redux\";\r\nimport { ReduxState } from \"../../typings\";\r\nimport * as actions from \"../../actions\";\r\nimport { Role } from \"../../../shared/typings\";\r\nimport moment from \"moment\";\r\n\r\ninterface ModalFormBookingUpdateStateProps {\r\n\tauth: ReduxState[\"auth\"];\r\n\tusers: ReduxState[\"users\"];\r\n\tvehicles: ReduxState[\"vehicles\"];\r\n\tlocations: ReduxState[\"locations\"];\r\n}\r\n\r\ntype ModalFormBookingUpdateActionProps = ResolveThunks<typeof actions>;\r\n\r\ntype Props = ModalFormBookingUpdateStateProps &\r\n\tModalFormBookingUpdateActionProps &\r\n\tRouteChildrenProps<{ id: string }, {}>;\r\n\r\ntype State = {\r\n\tvalues: FormBookingUpdateValues;\r\n\terrors: FormError<FormBookingUpdateValues>;\r\n\ttouched: TouchedFields<FormBookingUpdateValues>;\r\n\tlocations: LocationAttributes[] | undefined;\r\n\terrorNotes: string[];\r\n\tinitializing: boolean;\r\n\tloading: boolean;\r\n\tbooking: Booking | undefined;\r\n};\r\n\r\nclass ModalFormBookingUpdateBase extends Component<Props, State> {\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\terrors: {},\r\n\t\t\ttouched: {},\r\n\t\t\terrorNotes: [],\r\n\t\t\tloading: false,\r\n\t\t\tinitializing: true,\r\n\t\t\tlocations: [],\r\n\t\t\tvalues: {},\r\n\t\t\tbooking: undefined\r\n\t\t};\r\n\t}\r\n\r\n\tpublic getAvailableVehicles = () =>\r\n\t\t_.debounce((from: number, to: number) => {\r\n\t\t\tthis.props.fetchVehicles(from, to);\r\n\t\t\tthis.props.fetchBookings();\r\n\t\t}, 1000);\r\n\r\n\tpublic getVehicleLocation = (vehicleId: number) => {\r\n\t\tconst { locations, vehicles } = this.props;\r\n\r\n\t\tconst vehicle = vehicles && vehicles.data.find(v => v.id === vehicleId);\r\n\r\n\t\treturn (\r\n\t\t\tvehicle &&\r\n\t\t\tlocations &&\r\n\t\t\tlocations.data.find(l => l.id === vehicle.locationId)\r\n\t\t);\r\n\t};\r\n\r\n\tpublic componentDidMount = () => {\r\n\t\tconst { match, history, locations } = this.props;\r\n\t\tconst bookingId = match?.params.id;\r\n\t\tif (!bookingId) {\r\n\t\t\thistory.push(\"/bookings\");\r\n\t\t} else {\r\n\t\t\tBooking.fromId(Number(bookingId))\r\n\t\t\t\t.then(async b => {\r\n\t\t\t\t\tconst vehicleLocation = await Vehicle.getLocation(b.data.vehicleId);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tvalues: {\r\n\t\t\t\t\t\t\tid: b.data.id,\r\n\t\t\t\t\t\t\tbookingType: b.data.bookingType,\r\n\t\t\t\t\t\t\tfrom: moment(b.data.from, \"X\").toDate(),\r\n\t\t\t\t\t\t\tto: moment(b.data.to, \"X\").toDate(),\r\n\t\t\t\t\t\t\tuserId: b.data.userId,\r\n\t\t\t\t\t\t\tvehicleId: b.data.vehicleId,\r\n\t\t\t\t\t\t\tlocationId:\r\n\t\t\t\t\t\t\t\t(vehicleLocation && vehicleLocation.data.id) || undefined\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tbooking: b,\r\n\t\t\t\t\t\terrors: {\r\n\t\t\t\t\t\t\t...this.state.errors,\r\n\t\t\t\t\t\t\tlocationId:\r\n\t\t\t\t\t\t\t\t(vehicleLocation === undefined &&\r\n\t\t\t\t\t\t\t\t\t\"Vehicle is not available anymore\") ||\r\n\t\t\t\t\t\t\t\tundefined\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tinitializing: false\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch(e => {\r\n\t\t\t\t\t// TODO use error modal.\r\n\t\t\t\t\thistory.push(\"/bookings\");\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tpublic componentDidUpdate = (prevProps: Props, prevState: State) => {\r\n\t\tconst { users } = this.props;\r\n\t\tconst { values } = this.state;\r\n\r\n\t\tif (prevState.values.userId !== values.userId) {\r\n\t\t\t// Reset vehicle field if user has changed.\r\n\t\t\tlet resetFields = false;\r\n\t\t\tif (prevState.values.userId) {\r\n\t\t\t\tresetFields = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (values.userId && users && users.data) {\r\n\t\t\t\tconst user = users.data.find(u => u.id == values.userId);\r\n\t\t\t\tif (user && user.clientId !== null) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tlocations: [],\r\n\t\t\t\t\t\tvalues: {\r\n\t\t\t\t\t\t\t...values,\r\n\t\t\t\t\t\t\tvehicleId: resetFields ? undefined : values.vehicleId,\r\n\t\t\t\t\t\t\tlocationId: resetFields ? undefined : values.locationId\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tLocation.fromClientId(user.clientId).then(l => {\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tlocations: l.map(l => l.data)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tpublic render = () => {\r\n\t\tconst { users, vehicles, history } = this.props;\r\n\t\tconst {\r\n\t\t\tinitializing,\r\n\t\t\tvalues,\r\n\t\t\terrors,\r\n\t\t\ttouched,\r\n\t\t\terrorNotes,\r\n\t\t\tloading,\r\n\t\t\tlocations\r\n\t\t} = this.state;\r\n\r\n\t\tconst locationList: FieldSelectItems | undefined = (values &&\r\n\t\t\tlocations &&\r\n\t\t\tlocations.map(l => ({\r\n\t\t\t\tlabel: l.name,\r\n\t\t\t\tvalue: l.id\r\n\t\t\t}))) || [{ label: \"Please select a user.\", value: \"\" }];\r\n\r\n\t\tconst vehicleList: FieldSelectItems | undefined =\r\n\t\t\t(values &&\r\n\t\t\t\tvehicles &&\r\n\t\t\t\tvehicles.data\r\n\t\t\t\t\t.filter(v => v.locationId === values.locationId)\r\n\t\t\t\t\t.map(v => ({\r\n\t\t\t\t\t\tlabel: `${v.plateNumber} - ${v.brand} ${v.model}`,\r\n\t\t\t\t\t\tvalue: v.id\r\n\t\t\t\t\t}))) ||\r\n\t\t\t[];\r\n\r\n\t\tconst userList: FieldSelectItems | undefined =\r\n\t\t\t(users &&\r\n\t\t\t\tusers.data\r\n\t\t\t\t\t.filter(u => u.role === Role.GUEST && u.clientId !== null)\r\n\t\t\t\t\t.map(u => ({ label: u.username, value: u.id }))) ||\r\n\t\t\tundefined;\r\n\r\n\t\treturn (\r\n\t\t\t(locationList && userList && (\r\n\t\t\t\t<Modal\r\n\t\t\t\t\topen={true}\r\n\t\t\t\t\tonClose={() => history.push(\"/bookings\")}\r\n\t\t\t\t\tloading={initializing}\r\n\t\t\t\t>\r\n\t\t\t\t\t<FormBookingUpdate\r\n\t\t\t\t\t\t// Cast because if modal is loading, it will not load the form.\r\n\t\t\t\t\t\tvalues={values as FormBookingUpdateValues}\r\n\t\t\t\t\t\terrors={errors}\r\n\t\t\t\t\t\ttouched={touched}\r\n\t\t\t\t\t\terrorNotes={errorNotes}\r\n\t\t\t\t\t\tonFieldTouch={touched => {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\ttouched\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tloading={loading}\r\n\t\t\t\t\t\tonChange={(values, errors) => {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\t\t\terrors\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvehicleList={vehicleList}\r\n\t\t\t\t\t\tlocationList={locationList}\r\n\t\t\t\t\t\tuserList={userList}\r\n\t\t\t\t\t\tonSubmit={async () => {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tloading: true\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tvalues &&\r\n\t\t\t\t\t\t\t\t\tvalues.id &&\r\n\t\t\t\t\t\t\t\t\t(await Booking.update(\r\n\t\t\t\t\t\t\t\t\t\tvalues.id,\r\n\t\t\t\t\t\t\t\t\t\tformBookingUpdateValidationSchema.cast(values, {\r\n\t\t\t\t\t\t\t\t\t\t\tstripUnknown: true,\r\n\t\t\t\t\t\t\t\t\t\t\tcontext: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tstatus: FormStatus.SUBMITTING\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t));\r\n\t\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t\t\t\t// TODO: Show error in modal\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tloading: false\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\thistory.push(\"/bookings\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal>\r\n\t\t\t)) ||\r\n\t\t\tnull\r\n\t\t);\r\n\t};\r\n}\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n\tModalFormBookingUpdateStateProps,\r\n\t{},\r\n\tReduxState\r\n> = ({ auth, users, vehicles, locations }) => ({\r\n\tauth,\r\n\tusers,\r\n\tvehicles,\r\n\tlocations\r\n});\r\n\r\nexport const ModalFormBookingUpdate = compose<Props, {}>(\r\n\tconnect(mapStateToProps, actions),\r\n\twithRouter\r\n)(ModalFormBookingUpdateBase);\r\n",
		"import React, { FC, useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { connect, ResolveThunks, MapStateToProps } from \"react-redux\";\r\nimport { withRouter, RouteChildrenProps } from \"react-router\";\r\nimport { compose } from \"recompose\";\r\nimport { Booking } from \"../../api\";\r\nimport {\r\n\tFormFinalizeBooking,\r\n\tModal,\r\n\tFormFinalizeBookingValues,\r\n\tTouchedFields,\r\n\tFormError\r\n} from \"../presentational\";\r\nimport { ReduxState } from \"../../typings\";\r\nimport * as actions from \"../../actions\";\r\n\r\ninterface ModalFinalizeBookingStateProps {\r\n\tauth: ReduxState[\"auth\"];\r\n\tusers: ReduxState[\"users\"];\r\n}\r\n\r\ntype ModalFinalizeBookingActionProps = ResolveThunks<typeof actions>;\r\n\r\ntype Props = ModalFinalizeBookingStateProps &\r\n\tModalFinalizeBookingActionProps &\r\n\tRouteChildrenProps<{ id: string }, {}>;\r\n\r\nconst ModalFinalizeBookingBase: FC<Props> = ({\r\n\tmatch,\r\n\thistory,\r\n\tauth,\r\n\tusers,\r\n\tfetchBookings\r\n}: Props) => {\r\n\tconst [booking, setBooking] = useState<Booking | undefined>();\r\n\tconst [values, setValues] = useState<FormFinalizeBookingValues | undefined>();\r\n\tconst [errors, setErrors] = useState<FormError<FormFinalizeBookingValues>>();\r\n\tconst [touched, setTouched] = useState<\r\n\t\tTouchedFields<FormFinalizeBookingValues>\r\n\t>();\r\n\tconst [isLoading, setLoading] = useState<boolean>(false);\r\n\tconst bookingId = match?.params.id;\r\n\r\n\tconst booker =\r\n\t\tbooking && auth && auth.data.id === booking.data.userId\r\n\t\t\t? auth.data\r\n\t\t\t: users && users.data.find(u => u.id === booking?.data.userId);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!bookingId) {\r\n\t\t\thistory.push(\"/bookings\");\r\n\t\t} else {\r\n\t\t\tBooking.fromId(Number(bookingId))\r\n\t\t\t\t.then(b => {\r\n\t\t\t\t\tsetBooking(b);\r\n\t\t\t\t\tsetValues({\r\n\t\t\t\t\t\tamount: b.data.amount || 0\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch(e => {\r\n\t\t\t\t\t// TODO use error modal.\r\n\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\thistory.push(\"/bookings\");\r\n\t\t\t\t});\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\tloading={values === undefined}\r\n\t\t\tonClose={() => history.push(\"/bookings\")}\r\n\t\t>\r\n\t\t\t{booker && booking && (\r\n\t\t\t\t<FormFinalizeBooking\r\n\t\t\t\t\t// Cast because children will not load if values is undefined.\r\n\t\t\t\t\tvalues={values as FormFinalizeBookingValues}\r\n\t\t\t\t\tonChange={(values, errors) => {\r\n\t\t\t\t\t\tsetValues(values);\r\n\t\t\t\t\t\tsetErrors(errors);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonCancel={() => {\r\n\t\t\t\t\t\thistory.push(\"/bookings\");\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tfrom={moment(booking.data.from, \"X\").toDate()}\r\n\t\t\t\t\tto={moment(booking.data.to, \"X\").toDate()}\r\n\t\t\t\t\tbookingType={booking.data.bookingType || \"Unknown\"}\r\n\t\t\t\t\tvehicle={`${booking.data.vehicle?.plateNumber} - ${booking.data.vehicle?.brand} ${booking.data.vehicle?.model}`}\r\n\t\t\t\t\tuser={booker.username}\r\n\t\t\t\t\terrors={errors}\r\n\t\t\t\t\ttouched={touched}\r\n\t\t\t\t\tonFieldTouch={setTouched}\r\n\t\t\t\t\tloading={isLoading}\r\n\t\t\t\t\tonSubmit={async () => {\r\n\t\t\t\t\t\tsetLoading(true);\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tvalues && booking.finalize(values.amount);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t\t\t// TODO: SHow error in modal.\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t\tfetchBookings();\r\n\t\t\t\t\t\thistory.replace(\"/bookings\");\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps: MapStateToProps<\r\n\tModalFinalizeBookingStateProps,\r\n\t{},\r\n\tReduxState\r\n> = ({ auth, users }) => ({\r\n\tauth,\r\n\tusers\r\n});\r\n\r\nexport const ModalFormFinalizeBooking = compose<Props, {}>(\r\n\twithRouter,\r\n\tconnect(mapStateToProps, actions)\r\n)(ModalFinalizeBookingBase);\r\n",
		"import React, { FC, useState, useEffect } from \"react\";\r\nimport { connect, ResolveThunks } from \"react-redux\";\r\nimport { RouteChildrenProps } from \"react-router\";\r\nimport { ModalConfirm } from \"../presentational\";\r\nimport { Booking } from \"../../api\";\r\nimport * as actions from \"../../actions\";\r\n\r\ntype Props = RouteChildrenProps<{ id?: string }, {}> &\r\n\tResolveThunks<typeof actions>;\r\n\r\nconst ModalConfirmPayBookingBase: FC<Props> = ({\r\n\thistory,\r\n\tmatch,\r\n\tfetchBookings\r\n}) => {\r\n\tconst bookingId = match?.params.id;\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\tuseEffect(() => {\r\n\t\tif (!bookingId) {\r\n\t\t\thistory.push(\"/bookings\");\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<ModalConfirm\r\n\t\t\tcontent={`Booking #${bookingId} will be marked as paid.`}\r\n\t\t\ttitle=\"Marked as paid?\"\r\n\t\t\tloading={loading}\r\n\t\t\tyes={async () => {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tif (bookingId) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tawait Booking.pay(Number(bookingId));\r\n\t\t\t\t\t\tfetchBookings();\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t// TODO: show error in modal.\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\thistory.push(\"/bookings\");\r\n\t\t\t}}\r\n\t\t\tno={() => {\r\n\t\t\t\thistory.push(\"/bookings\");\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport const ModalConfirmPayBooking = connect(\r\n\tnull,\r\n\tactions\r\n)(ModalConfirmPayBookingBase);\r\n",
		"export * from \"./ReportArea\";\r\nexport * from \"./AccidentDashBoard\";\r\nexport * from \"./BookingDashBoard\";\r\nexport * from \"./UserDashBoard\";\r\nexport * from \"./VehicleDashBoard\";\r\nexport * from \"./BookingTable\";\r\nexport * from \"./BookingCreateFormStepper\";\r\nexport * from \"./layout/Role\";\r\nexport * from \"./ModalConfirmDeleteBooking\";\r\nexport * from \"./ModalFormBookingUpdate\";\r\nexport * from \"./ModalFormFinalizeBooking\";\r\nexport * from \"./ModalConfirmPayBooking\";\r\n",
		"import { Column } from \"material-table\";\r\n\r\nimport { UnitSummaryResponse } from \"../../typings/api\";\r\nimport { Generatable } from \".\";\r\nimport { ExtractServerResponseData } from \"../../typings\";\r\nimport api from \"../helpers/api\";\r\nimport { Role } from \"../../../shared/typings\";\r\nimport { RoleUtils } from \"../\";\r\n\r\nexport class UnitSummary implements Generatable<UnitSummaryResponse[]> {\r\n\tpublic title = \"Unit Summary\";\r\n\r\n\tpublic generate = async () => {\r\n\t\tconst response = await api.fetchUnitSummaryReport();\r\n\t\treturn response.data;\r\n\t};\r\n\r\n\tpublic getColumnData = (role?: Role): Array<Column<UnitSummaryResponse>> => {\r\n\t\tconst showSensitive =\r\n\t\t\t(role && RoleUtils.isRoleBetter(Role.KEY_MANAGER, role)) || false;\r\n\r\n\t\tconst columns: Array<Column<UnitSummaryResponse>> = [\r\n\t\t\t{\r\n\t\t\t\tfield: \"brand\",\r\n\t\t\t\ttitle: \"Brand\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tfield: \"model\",\r\n\t\t\t\ttitle: \"Model\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tfield: \"defleeted\",\r\n\t\t\t\ttitle: \"Defleeted\",\r\n\t\t\t\ttype: \"boolean\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tfield: \"wialonUnit\",\r\n\t\t\t\ttitle: \"Wialon Enabled\",\r\n\t\t\t\ttype: \"boolean\"\r\n\t\t\t},\r\n\t\t\t{ field: \"plateNumber\", title: \"Plate Number\" },\r\n\t\t\t{ field: \"odometer\", title: \"Odometer\", type: \"numeric\" },\r\n\t\t\t{ field: \"accidents\", title: \"Accidents\", type: \"numeric\" },\r\n\t\t\t{ field: \"bookings\", title: \"Bookings\", type: \"numeric\" },\r\n\t\t\t{\r\n\t\t\t\tfield: \"categories\",\r\n\t\t\t\ttitle: \"Categories\",\r\n\t\t\t\trender: rowData => rowData.categories.join(\", \")\r\n\t\t\t},\r\n\t\t\t{ field: \"issues\", title: \"Issues\", type: \"numeric\" }\r\n\t\t];\r\n\r\n\t\tif (showSensitive) {\r\n\t\t\tcolumns.push({\r\n\t\t\t\tfield: \"wialonUnitName\",\r\n\t\t\t\ttitle: \"Wialon Unit\"\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (role === Role.MASTER) {\r\n\t\t\tcolumns.push({\r\n\t\t\t\tfield: \"client\",\r\n\t\t\t\ttitle: \"Client\"\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn columns;\r\n\t};\r\n}\r\n",
		"export * from \"./Generatable\";\r\nexport * from \"./UnitSummary\";\r\n"
	],
	"sourceRoot": ""
}
